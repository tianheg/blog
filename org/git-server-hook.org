#+SETUPFILE: ./hugo_setup.org
#+TITLE: 云服务器配置 Git 仓库托管并使用 Git Hooks 自动执行脚本
#+DATE: <2021-10-11 Mon>
#+HUGO_TAGS: 技术 Git

上文见[[/posts/hugo-deploy-to-server/][部署 Hugo 博客到 Ubuntu 服务器]]。

之前的博客更新思路是，本地提交修改至 GitHub，再登陆云服务器，手动执行脚本，达到更新博客内容的目的。但是，从 GitHub 拉取代码较慢，于是想到可以把本地的更改同时推送到 GitHub 和云服务器。再通过 Git Hooks 自动执行「更新博客」的脚本，以此达到提升效率的目的。

* 更新 Git 至最新版本

云服务器的系统是 Ubuntu 20.04，所以可以通过以下命令安装 Git 的最新版本：

#+BEGIN_SRC sh
add-apt-repository ppa:git-core/ppa
apt update
apt install git
#+END_SRC

* 创建 Git 用户

#+BEGIN_SRC sh
adduser git # note difference with useradd
passwd git # add password for git user
sudo visudo
#+END_SRC

修改 =/etc/sudoers= ：

#+BEGIN_SRC conf
root    ALL=(ALL)       ALL
ubuntu  ALL=(ALL:ALL) NOPASSWD: ALL
git  ALL=(ALL:ALL) NOPASSWD: ALL # add
#+END_SRC

* 配置 ssh 公匙

在本地主机执行以下命令：

#+BEGIN_SRC sh
ssh-keygen -t ed25519 -C "email"
#+END_SRC

会生成两个文件：id_ed25519 和 id_ed25519.pub。将 id_ed25519.pub 文件里的内容复制到云服务器的 authorized_keys 文件中：

#+BEGIN_SRC sh
su git
mkdir ~/.ssh
vim ~/.ssh/authorized_keys
#+END_SRC

然后在本地添加私匙：

#+BEGIN_SRC sh
ssh-add ~/.ssh/ssh_rsa
#+END_SRC

如果不添加私匙，还是提示输入密码。

注意： =~= 代表 =/home/git= 。只有 git 用户才能使用这个公匙。

修改权限：

#+BEGIN_SRC sh
cd ~
chmod 600 .ssh/authorized_keys
chmod 700 .ssh
#+END_SRC

本地测试 git 服务：

#+BEGIN_SRC sh
ssh -v git@server-ip # Server public network IP
#+END_SRC

* 创建博客文件夹

#+BEGIN_SRC sh
su root # switch to root user
mkdir /home/hugo
chown git:git -R /home/hugo
#+END_SRC

* 更改站点目录权限

#+BEGIN_SRC sh
sudo chown git:git -R /var/www/hugo # for git hook
#+END_SRC

* 创建 bare 仓库并配置 Git Hook

#+BEGIN_SRC sh
su root
cd /home/git
git init --bare blog.git
chown git:git -R blog.git
vim blog.git/hooks/post-receive
chmod +x blog.git/hooks/post-receive
#+END_SRC

新建文件 =blog.git/hooks/post-receive= ：

#+BEGIN_SRC bash
#!/bin/sh
git --work-tree=/home/hugo --git-dir=/home/git/blog.git checkout -f
cd /var/www/hugo
rm -rf * # 删除文件夹下的所有文件以保持最新
cd /home/hugo
hugo --minify -d /var/www/hugo
#+END_SRC

* 本地配置云服务器仓库

#+BEGIN_SRC sh
git remote add origin git@server-ip:/home/git/blog.git
git push -u origin main # first push
#+END_SRC

* 使用 Docker 配置 Hugo 部署

#+BEGIN_SRC sh
#!/bin/sh

git --work-tree=/home/www --git-dir=/home/git/blog.git checkout -f
cd /home/www/public
sudo rm -rf * # 删除文件夹下的所有文件以保持最新 & 通过 Docker 生成文件权限为 root 需要加 sudo
cd /home/git/docker-blog
docker compose up -d
#+END_SRC

=/home/git/docker-blog= ：

#+BEGIN_SRC sh
docker-compose.yml  nginx.conf
#+END_SRC

=docker-compose.yml= ：

#+BEGIN_SRC yml
version: "3.9"

services:
  nginx:
    image: nginx:stable
    volumes:
      - $PWD/nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt
      - /home/www/public:/home/www/public
    ports:
      - "80:80"
      - "443:443"

  blog:
    image: tianheg/hugo:0.98.0
    volumes:
      - /home/www:/home/git
      - /home/www/public:/output
    environment:
      - HUGO_BASEURL=https://www.yidajiabei.xyz/
#+END_SRC

---
参考资料

1. [[https://segmentfault.com/a/1190000039676421]]
2. [[https://www.saintsjd.com/2011/01/what-is-a-bare-git-repository/]]
