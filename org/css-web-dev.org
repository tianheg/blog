#+SETUPFILE: ./hugo_setup.org
#+TITLE: 学习《web.dev CSS教程》
#+DATE: <2022-02-20 Sun>
#+HUGO_TAGS: 技术 CSS
#+HUGO_CUSTOM_FRONT_MATTER: :toc true

https://web.dev/learn/css/

* Box Model 盒子模型
#+BEGIN_QUOTE
盒子模型是 CSS 的核心。
#+END_QUOTE
** 内容和大小
=display= 的值不同，盒子的状态不同。盒子中有更多内容，比如更多盒子。这些盒子由子元素或纯文本生成。即使没有子元素，内容本身就会改变盒子的大小。

自定义盒子大小 extrinsic sizing vs 使用浏览器默认大小 intrinsic sizing

当内容太多，以至于盒子无法放下时，就会出现溢出。要处理这种情况就要用到 =overflow= 属性。
** 盒子模型是如何划分区域的
#+BEGIN_EXPORT hugo
![](/web-dev-css-box-model-1.svg "from https://web.dev/learn/css/box-model/")
#+END_EXPORT

box-sizing: border-box;

* Selectors 选择器
- 通用选择器（通配符）
- 属性选择器
- 伪类，伪元素（它们的区别：后者通过 ~::~ 使用）
- Combinators
  - Descendant combinator
  - Next sibling combinator
  - Subsequent- sibling combinator
  - Child combinator
- Compound selectors

如果 class 中含有不止目标 class 的其他类，在进行 CSS 设置时也会匹配。因为 CSS 查找 class 属性是否被包含，而不是恰好符合目标 class。
* The cascade
当同一个元素被多种 CSS 规则修改时，哪些规则的优先级更高？

---

* 参考资料
1. https://developer.mozilla.org/en-US/docs/Web/CSS
2. https://flukeout.github.io/
3. User agent stylesheets
  - [[https://chromium.googlesource.com/chromium/blink/+/master/Source/core/css/html.css][Chromium]]
  - [[https://searchfox.org/mozilla-central/source/layout/style/res/html.css][Firefox]]
  - [[https://trac.webkit.org/browser/trunk/Source/WebCore/css/html.css][Webkit]]
4. Selectors Explained https://kittygiraudel.github.io/selectors-explained/