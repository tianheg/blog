<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel>
<title>一大加贝</title>
<link>https://www.yidajiabei.xyz/blog/</link>
<description>学习技术，热爱生活</description>
<generator>Python script wrote by myself</generator>
<language>zh-CN</language>
<managingEditor>me@yidajiabei.xyz (Jim Gao)</managingEditor>
<webMaster>me@yidajiabei.xyz (Jim Gao)</webMaster>
<copyright>在保留本文作者及本文链接的前提下，非商业用途随意转载分享。</copyright>
<lastBuildDate>Sat, 05 Feb 2022 05:01:44 +0800</lastBuildDate>
  <atom:link rel="self" type="application/rss+xml" href="https://www.yidajiabei.xyz/blog/index.xml"/>
<item><title>通过 Python 为博客生成 RSS</title><link>https://www.yidajiabei.xyz/blog/2022/python-blog-rss.html</link><guid isPermaLink="true">https://www.yidajiabei.xyz/blog/2022/python-blog-rss.html</guid><pubDate>Wed, 26 Jan 2022 08:00:00 CST</pubDate><description type="html">&lt;div id="content"&gt;
&lt;header&gt;
&lt;h1 class="title"&gt;通过 Python 为博客生成 RSS&lt;/h1&gt;
&lt;/header&gt;&lt;p&gt;
程序：
&lt;/p&gt;

&lt;div class="org-src-container"&gt;
&lt;pre class="src src-python"&gt;&lt;span style="color: #706565;"&gt;#&lt;/span&gt;&lt;span style="color: #857575;"&gt;!/usr/bin/env python&lt;/span&gt;

&lt;span style="color: #91a0b3;"&gt;import&lt;/span&gt; json
&lt;span style="color: #91a0b3;"&gt;import&lt;/span&gt; datetime &lt;span style="color: #91a0b3;"&gt;as&lt;/span&gt; dt
&lt;span style="color: #91a0b3;"&gt;from&lt;/span&gt; datetime &lt;span style="color: #91a0b3;"&gt;import&lt;/span&gt; datetime, date, time, timezone

&lt;span style="color: #aaca86;"&gt;domain&lt;/span&gt; = &lt;span style="color: #ddbc91;"&gt;'www.yidajiabei.xyz'&lt;/span&gt;

&lt;span style="color: #aaca86;"&gt;site&lt;/span&gt; = &lt;span style="color: #ddbc91;"&gt;'https://%s/blog/'&lt;/span&gt; % (domain)

&lt;span style="color: #91a0b3;"&gt;def&lt;/span&gt; &lt;span style="color: #a9df90;"&gt;get_end_of_day&lt;/span&gt;(date):
    &lt;span style="color: #91a0b3;"&gt;return&lt;/span&gt; datetime.strptime(
        f&lt;span style="color: #ddbc91;"&gt;'{date} 08:00:00'&lt;/span&gt;, &lt;span style="color: #ddbc91;"&gt;'%Y-%m-%d %H:%M:%S'&lt;/span&gt;).astimezone()

&lt;span style="color: #706565;"&gt;# &lt;/span&gt;&lt;span style="color: #857575;"&gt;&#35835;&#21462; json &#25991;&#20214;&#20869;&#23481;,&#36820;&#22238;&#23383;&#20856;&#26684;&#24335;&lt;/span&gt;
&lt;span style="color: #91a0b3;"&gt;with&lt;/span&gt; &lt;span style="color: #9fbfdf;"&gt;open&lt;/span&gt;(&lt;span style="color: #ddbc91;"&gt;'./scripts/blogs.json'&lt;/span&gt;,&lt;span style="color: #ddbc91;"&gt;'r'&lt;/span&gt;,encoding=&lt;span style="color: #ddbc91;"&gt;'utf8'&lt;/span&gt;)&lt;span style="color: #91a0b3;"&gt;as&lt;/span&gt; fp:
    &lt;span style="color: #aaca86;"&gt;json_data&lt;/span&gt; = json.load(fp)
    &lt;span style="color: #aaca86;"&gt;itemLines&lt;/span&gt; = [&lt;span style="color: #ddbc91;"&gt;"&lt;item&gt;&lt;title&gt;"&lt;/span&gt; + &lt;span style="color: #9fbfdf;"&gt;str&lt;/span&gt;(json_data[x][&lt;span style="color: #ddbc91;"&gt;'title'&lt;/span&gt;]) + &lt;span style="color: #ddbc91;"&gt;"&lt;/title&gt;&lt;link&gt;"&lt;/span&gt; + site + &lt;span style="color: #9fbfdf;"&gt;str&lt;/span&gt;(json_data[x][&lt;span style="color: #ddbc91;"&gt;'link'&lt;/span&gt;]) + &lt;span style="color: #ddbc91;"&gt;"&lt;/link&gt;&lt;guid isPermaLink=\"true\"&gt;"&lt;/span&gt; + site + &lt;span style="color: #9fbfdf;"&gt;str&lt;/span&gt;(json_data[x][&lt;span style="color: #ddbc91;"&gt;'link'&lt;/span&gt;]) + &lt;span style="color: #ddbc91;"&gt;"&lt;/guid&gt;&lt;pubDate&gt;"&lt;/span&gt; + get_end_of_day(&lt;span style="color: #9fbfdf;"&gt;str&lt;/span&gt;(json_data[x][&lt;span style="color: #ddbc91;"&gt;'date'&lt;/span&gt;])).strftime(&lt;span style="color: #ddbc91;"&gt;"%a, %d %b %Y %I:%M:%S %Z"&lt;/span&gt;) + &lt;span style="color: #ddbc91;"&gt;"&lt;/pubDate&gt;&lt;/item&gt;\n"&lt;/span&gt;&lt;span style="color: #91a0b3;"&gt;for&lt;/span&gt; x &lt;span style="color: #91a0b3;"&gt;in&lt;/span&gt; &lt;span style="color: #9fbfdf;"&gt;range&lt;/span&gt;(0, &lt;span style="color: #9fbfdf;"&gt;len&lt;/span&gt;(json_data) -1)]
    &lt;span style="color: #706565;"&gt;# &lt;/span&gt;&lt;span style="color: #857575;"&gt;print(type(itemLines))&lt;/span&gt;


&lt;span style="color: #91a0b3;"&gt;with&lt;/span&gt; &lt;span style="color: #9fbfdf;"&gt;open&lt;/span&gt;(&lt;span style="color: #ddbc91;"&gt;'./blog/index.xml'&lt;/span&gt;, &lt;span style="color: #ddbc91;"&gt;'w'&lt;/span&gt;) &lt;span style="color: #91a0b3;"&gt;as&lt;/span&gt; fh:
  fh.write(&lt;span style="color: #ddbc91;"&gt;"""&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;&lt;rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"&gt;&lt;channel&gt;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;&lt;title&gt;&#19968;&#22823;&#21152;&#36125;&lt;/title&gt;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;&lt;link&gt;https://www.yidajiabei.xyz/blog/&lt;/link&gt;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;&lt;description&gt;&#23398;&#20064;&#25216;&#26415;&#65292;&#28909;&#29233;&#29983;&#27963;&lt;/description&gt;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;&lt;generator&gt;Python script wrote by myself&lt;/generator&gt;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;&lt;language&gt;zh-CN&lt;/language&gt;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;&lt;managingEditor&gt;me@yidajiabei.xyz (Jim Gao)&lt;/managingEditor&gt;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;&lt;webMaster&gt;me@yidajiabei.xyz (Jim Gao)&lt;/webMaster&gt;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;&lt;copyright&gt;&#22312;&#20445;&#30041;&#26412;&#25991;&#20316;&#32773;&#21450;&#26412;&#25991;&#38142;&#25509;&#30340;&#21069;&#25552;&#19979;&#65292;&#38750;&#21830;&#19994;&#29992;&#36884;&#38543;&#24847;&#36716;&#36733;&#20998;&#20139;&#12290;&lt;/copyright&gt;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;&lt;lastBuildDate&gt;"""&lt;/span&gt;)
  fh.write(&lt;span style="color: #9fbfdf;"&gt;str&lt;/span&gt;(dt.datetime.now().strftime(&lt;span style="color: #ddbc91;"&gt;"%a, %d %b %Y %I:%M:%S +0800"&lt;/span&gt;)))
  fh.write(&lt;span style="color: #ddbc91;"&gt;"""&lt;/lastBuildDate&gt;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;  &lt;atom:link rel="self" type="application/rss+xml" href="https://www.yidajiabei.xyz/blog/index.xml"/&gt;\n"""&lt;/span&gt;)
  fh.writelines(itemLines[0:20])
  fh.write(&lt;span style="color: #ddbc91;"&gt;"""&lt;/channel&gt;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;&lt;/rss&gt;"""&lt;/span&gt;)
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
我通过 GitHub Action 每天抓取博客文章列表，并存储为 blogs.json。然后用 Python 处理 JSON 中的 title,link,date。
&lt;/p&gt;

&lt;p&gt;
生成 blogs.json 的 JavaScript 程序：
&lt;/p&gt;

&lt;div class="org-src-container"&gt;
&lt;pre class="src src-js"&gt;&lt;span style="color: #91a0b3;"&gt;const&lt;/span&gt; &lt;span style="color: #aaca86;"&gt;axios&lt;/span&gt; = require(&lt;span style="color: #ddbc91;"&gt;'axios'&lt;/span&gt;);
&lt;span style="color: #91a0b3;"&gt;const&lt;/span&gt; &lt;span style="color: #aaca86;"&gt;cheerio&lt;/span&gt; = require(&lt;span style="color: #ddbc91;"&gt;'cheerio'&lt;/span&gt;);
&lt;span style="color: #91a0b3;"&gt;const&lt;/span&gt; &lt;span style="color: #aaca86;"&gt;fs&lt;/span&gt; = require(&lt;span style="color: #ddbc91;"&gt;'fs'&lt;/span&gt;);

&lt;span style="color: #706565;"&gt;// &lt;/span&gt;&lt;span style="color: #857575;"&gt;for blogs.json&lt;/span&gt;
&lt;span style="color: #91a0b3;"&gt;const&lt;/span&gt; &lt;span style="color: #aaca86;"&gt;url&lt;/span&gt; = &lt;span style="color: #ddbc91;"&gt;'https://www.yidajiabei.xyz/blog/index.html'&lt;/span&gt;;

&lt;span style="color: #91a0b3;"&gt;async&lt;/span&gt; &lt;span style="color: #91a0b3;"&gt;function&lt;/span&gt; scrapeData() {
  &lt;span style="color: #91a0b3;"&gt;try&lt;/span&gt; {
    &lt;span style="color: #706565;"&gt;// &lt;/span&gt;&lt;span style="color: #857575;"&gt;Fetch HTML of the page we want to scrape&lt;/span&gt;
    &lt;span style="color: #91a0b3;"&gt;const&lt;/span&gt; { data } = &lt;span style="color: #91a0b3;"&gt;await&lt;/span&gt; axios.get(url);
    &lt;span style="color: #706565;"&gt;// &lt;/span&gt;&lt;span style="color: #857575;"&gt;Load HTML we fetched in the previous line&lt;/span&gt;
    &lt;span style="color: #91a0b3;"&gt;const&lt;/span&gt; &lt;span style="color: #aaca86;"&gt;$&lt;/span&gt; = cheerio.load(data);
    &lt;span style="color: #706565;"&gt;// &lt;/span&gt;&lt;span style="color: #857575;"&gt;Select all the list items in plainlist class&lt;/span&gt;
    &lt;span style="color: #91a0b3;"&gt;const&lt;/span&gt; &lt;span style="color: #aaca86;"&gt;listItems&lt;/span&gt; = $(&lt;span style="color: #ddbc91;"&gt;'.org-ul li'&lt;/span&gt;);
    &lt;span style="color: #706565;"&gt;// &lt;/span&gt;&lt;span style="color: #857575;"&gt;Stores data for all countries&lt;/span&gt;
    &lt;span style="color: #91a0b3;"&gt;const&lt;/span&gt; &lt;span style="color: #aaca86;"&gt;countries&lt;/span&gt; = [];
    &lt;span style="color: #706565;"&gt;// &lt;/span&gt;&lt;span style="color: #857575;"&gt;Use .each method to loop through the li we selected&lt;/span&gt;
    listItems.each((idx, el) =&gt; {
      &lt;span style="color: #706565;"&gt;// &lt;/span&gt;&lt;span style="color: #857575;"&gt;Object holding data for each country/jurisdiction&lt;/span&gt;
      &lt;span style="color: #91a0b3;"&gt;const&lt;/span&gt; &lt;span style="color: #aaca86;"&gt;country&lt;/span&gt; = { title: &lt;span style="color: #ddbc91;"&gt;''&lt;/span&gt;, link: &lt;span style="color: #ddbc91;"&gt;''&lt;/span&gt;, date: &lt;span style="color: #ddbc91;"&gt;''&lt;/span&gt; }; &lt;span style="color: #706565;"&gt;// &lt;/span&gt;&lt;span style="color: #857575;"&gt;, link: ""&lt;/span&gt;
      &lt;span style="color: #706565;"&gt;// &lt;/span&gt;&lt;span style="color: #857575;"&gt;Select the text content of a and span elements&lt;/span&gt;
      &lt;span style="color: #706565;"&gt;// &lt;/span&gt;&lt;span style="color: #857575;"&gt;Store the textcontent in the above object&lt;/span&gt;
      country.title = $(el).children(&lt;span style="color: #ddbc91;"&gt;'a'&lt;/span&gt;).text();
      country.link = $(el).children(&lt;span style="color: #ddbc91;"&gt;'a'&lt;/span&gt;).attr(&lt;span style="color: #ddbc91;"&gt;'href'&lt;/span&gt;);
      country.date = $(el)
        .text()
        .replace(&lt;span style="color: #ddbc91;"&gt;/[^0-9][^\s]+/&lt;/span&gt;g, &lt;span style="color: #ddbc91;"&gt;''&lt;/span&gt;)
        .split(&lt;span style="color: #ddbc91;"&gt;'-'&lt;/span&gt;)
        .join(&lt;span style="color: #ddbc91;"&gt;''&lt;/span&gt;)
        .match(&lt;span style="color: #ddbc91;"&gt;/.{1,2}/&lt;/span&gt;g)
        .join(&lt;span style="color: #ddbc91;"&gt;'-'&lt;/span&gt;);
      &lt;span style="color: #91a0b3;"&gt;if&lt;/span&gt; (country.link.split(&lt;span style="color: #ddbc91;"&gt;'/'&lt;/span&gt;)[0] === &lt;span style="color: #ddbc91;"&gt;'2022'&lt;/span&gt;) {
        country.date = &lt;span style="color: #ddbc91;"&gt;'2022-'&lt;/span&gt; + country.date;
      } &lt;span style="color: #91a0b3;"&gt;else&lt;/span&gt; &lt;span style="color: #91a0b3;"&gt;if&lt;/span&gt; (country.link.split(&lt;span style="color: #ddbc91;"&gt;'/'&lt;/span&gt;)[0] === &lt;span style="color: #ddbc91;"&gt;'2021'&lt;/span&gt;) {
        country.date = &lt;span style="color: #ddbc91;"&gt;'2021-'&lt;/span&gt; + country.date;
      } &lt;span style="color: #91a0b3;"&gt;else&lt;/span&gt; &lt;span style="color: #91a0b3;"&gt;if&lt;/span&gt; (country.link.split(&lt;span style="color: #ddbc91;"&gt;'/'&lt;/span&gt;)[0] === &lt;span style="color: #ddbc91;"&gt;'2020'&lt;/span&gt;) {
        country.date = &lt;span style="color: #ddbc91;"&gt;'2020-'&lt;/span&gt; + country.date;
      } &lt;span style="color: #91a0b3;"&gt;else&lt;/span&gt; &lt;span style="color: #91a0b3;"&gt;if&lt;/span&gt; (country.link.split(&lt;span style="color: #ddbc91;"&gt;'/'&lt;/span&gt;)[0] === &lt;span style="color: #ddbc91;"&gt;'2019'&lt;/span&gt;) {
        country.date = &lt;span style="color: #ddbc91;"&gt;'2019-'&lt;/span&gt; + country.date;
      } &lt;span style="color: #91a0b3;"&gt;else&lt;/span&gt; &lt;span style="color: #91a0b3;"&gt;if&lt;/span&gt; (country.link.split(&lt;span style="color: #ddbc91;"&gt;'/'&lt;/span&gt;)[0] === &lt;span style="color: #ddbc91;"&gt;'2018'&lt;/span&gt;) {
        country.date = &lt;span style="color: #ddbc91;"&gt;'2018-'&lt;/span&gt; + country.date;
      } 
        &lt;span style="color: #706565;"&gt;// &lt;/span&gt;&lt;span style="color: #857575;"&gt;console.log(country.title);&lt;/span&gt;
        &lt;span style="color: #706565;"&gt;// &lt;/span&gt;&lt;span style="color: #857575;"&gt;Populate countries array with country data&lt;/span&gt;
        countries.push(country);
    });
    &lt;span style="color: #706565;"&gt;// &lt;/span&gt;&lt;span style="color: #857575;"&gt;Logs countries array to the console&lt;/span&gt;
    console.dir(countries);
    &lt;span style="color: #706565;"&gt;// &lt;/span&gt;&lt;span style="color: #857575;"&gt;Write countries array in countries.json file&lt;/span&gt;
    fs.writeFile(&lt;span style="color: #ddbc91;"&gt;'blogs.json'&lt;/span&gt;, JSON.stringify(countries, &lt;span style="color: #ab85a3;"&gt;null&lt;/span&gt;, 2), (err) =&gt; {
      &lt;span style="color: #91a0b3;"&gt;if&lt;/span&gt; (err) {
        console.error(err);
        &lt;span style="color: #91a0b3;"&gt;return&lt;/span&gt;;
      }
      console.log(&lt;span style="color: #ddbc91;"&gt;'Successfully written data to blogs.json'&lt;/span&gt;);
    });
  } &lt;span style="color: #91a0b3;"&gt;catch&lt;/span&gt; (err) {
    console.error(err);
  }
}
&lt;span style="color: #706565;"&gt;// &lt;/span&gt;&lt;span style="color: #857575;"&gt;Invoke the above function&lt;/span&gt;
scrapeData();
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
参考资料：
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;&lt;a href="http://johnbokma.com/blog/2019/10/09/hand-coding-an-rss-2-0-feed-in-python.html"&gt;http://johnbokma.com/blog/2019/10/09/hand-coding-an-rss-2-0-feed-in-python.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://johnbokma.com/blog/2019/10/09/rfc-822-and-rfc-3339-dates-in-python.html"&gt;http://johnbokma.com/blog/2019/10/09/rfc-822-and-rfc-3339-dates-in-python.html&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description></item>
<item><title>DOM Scripting</title><link>https://www.yidajiabei.xyz/blog/2022/dom-scripting.html</link><guid isPermaLink="true">https://www.yidajiabei.xyz/blog/2022/dom-scripting.html</guid><pubDate>Sat, 22 Jan 2022 08:00:00 CST</pubDate><description type="html">&lt;div id="content"&gt;
&lt;header&gt;
&lt;h1 class="title"&gt;DOM Scripting&lt;/h1&gt;
&lt;/header&gt;
&lt;/div&gt;</description></item>
<item><title>听「无人知晓第九期：孟岩对话黄海」</title><link>https://www.yidajiabei.xyz/blog/2022/mengyan-huanghai.html</link><guid isPermaLink="true">https://www.yidajiabei.xyz/blog/2022/mengyan-huanghai.html</guid><pubDate>Wed, 19 Jan 2022 08:00:00 CST</pubDate><description type="html">&lt;div id="content"&gt;
&lt;header&gt;
&lt;h1 class="title"&gt;听「无人知晓第九期：孟岩对话黄海」&lt;/h1&gt;
&lt;/header&gt;&lt;p&gt;
&lt;a href="https://www.xiaoyuzhoufm.com/episode/61dbf5b519e8465da2f8f4fd?s=eyJ1IjoiNjA1NGU4NjFlMGY1ZTcyM2JiMjRjMzQ4In0%3D"&gt;E09 孟岩对话黄海：让更多人知道你，还是让爱你的人更爱你 by 无人知晓&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
一、如何定义「品牌」？
&lt;/p&gt;

&lt;p&gt;
黄海：品牌即信任。他认为信任有两种类型：一种是基于人的信任；一种是基于公司的信任。
&lt;/p&gt;

&lt;p&gt;
People follow people, people don't follow the company.
&lt;/p&gt;

&lt;p&gt;
为什么「人与人之间天然地易产生信任关系」？现在的我对陌生人就会有种戒备心，戒备心和信任是可以共存的。
&lt;/p&gt;

&lt;p&gt;
二、星巴克是怎么成为今天的庞然大物的？
&lt;/p&gt;

&lt;p&gt;
关注顾客的感受，建立人与人的链接。
&lt;/p&gt;

&lt;p&gt;
三、做品牌的优秀创始人的思考方式
&lt;/p&gt;

&lt;p&gt;
让喜欢我的人尽可能地更喜欢我，而不是让更多的人的喜欢我。
&lt;/p&gt;

&lt;p&gt;
知名度在眼，美誉度在心，伟大的品牌是心与心的连接。by 孟岩
&lt;/p&gt;

&lt;p&gt;
四、效率和体验如何兼顾？
&lt;/p&gt;

&lt;p&gt;
品牌构造的早期，体验为先，在体验完成后，效率为先。
&lt;/p&gt;

&lt;p&gt;
阿里和美团是 KPI 导向的公司。
&lt;/p&gt;

&lt;p&gt;
多关注体验型公司。
&lt;/p&gt;

&lt;p&gt;
五、品牌是不是智商税？
&lt;/p&gt;

&lt;p&gt;
黄海：品牌不是智商税。
&lt;/p&gt;

&lt;p&gt;
看待世界，不能只以成本作为导向。
&lt;/p&gt;

&lt;p&gt;
六、随着经济社会发展，精神和内心满足类的需求会越来越多
&lt;/p&gt;


&lt;p&gt;
七、投资方式对比：Inside-out, fit-in
&lt;/p&gt;

&lt;p&gt;
真正能够做出好品牌的人：Inside-out，由内而外地表达；很多想做品牌的人是 fit-in。
&lt;/p&gt;

&lt;p&gt;
八、二级市场，宏观经济、政策、国际政治因素，对公司的影响？
&lt;/p&gt;

&lt;p&gt;
企业有自己的生存周期。
&lt;/p&gt;

&lt;p&gt;
孟岩：A 股中两种投资方式：自上而下（关注政策、宏观经济后再决定如何投资）和自下而上（主要关注公司本身、创始人、商业模式、文化）。孟岩坚持自下而上。他认为国家政策不可预测、且不重要，如何避免受到政策影响，分散投资风险，投资数十家。
&lt;/p&gt;

&lt;p&gt;
长期持仓、关注价值。
&lt;/p&gt;

&lt;p&gt;
名词解释
&lt;/p&gt;

&lt;p&gt;
ROI（投资回报率，Return on Investment），指通过投资而应返回的价值，即企业从一项投资活动中得到的经济回报。
&lt;/p&gt;

&lt;p&gt;
SKU（库存量单位，Stock Keeping Unit），即库存进出计量的基本单元。现已引申为产品统一编号的简称，每种产品均对应有唯一的 SKU 号。
&lt;/p&gt;

&lt;p&gt;
SOP（标准作业程序，Standard Operating Procedure），指将某一事件的标准操作步骤和要求以统一的格式描述出来，用于指导和规范日常的工作。
&lt;/p&gt;

&lt;p&gt;
一级市场，是资本需求者将证券首次出售给公众时形成的市场。
&lt;/p&gt;

&lt;p&gt;
二级市场，是有价证券的交易场所。&lt;/p&gt;
&lt;/div&gt;</description></item>
<item><title>2022 年 1 月上旬总结</title><link>https://www.yidajiabei.xyz/blog/2022/2022-jan-up-summary.html</link><guid isPermaLink="true">https://www.yidajiabei.xyz/blog/2022/2022-jan-up-summary.html</guid><pubDate>Wed, 19 Jan 2022 08:00:00 CST</pubDate><description type="html">&lt;div id="content"&gt;
&lt;header&gt;
&lt;h1 class="title"&gt;2022 年 1 月上旬总结&lt;/h1&gt;
&lt;/header&gt;&lt;p&gt;
总结 1.1-1.19。
&lt;/p&gt;

&lt;p&gt;
上个月 30 号，从学校回家。这个月到今天为止，大部分时间用来和父亲一起刮大白、和父亲一起卖对联；小部分时间我自己学习编程语言 JS，正在学习字符串 String 的属性和所有方法，下一步计划按照学习 String 的方式，学习 JS 的其他数据类型还有函数等基本概念。
&lt;/p&gt;

&lt;p&gt;
我一直在和自己的无所作为抗争。我除了学习编程，什么都不愿意做；但是，我还是说服自己，让自己做到了上述事情。不是没有情绪，我像个观察者，默默地体会情绪的生发，询问自己为什么不情愿、委屈、愤怒，进一步思考之后，觉得自己很多事情只站在自己角度考虑，而不去想想父亲为什么让我做。
&lt;/p&gt;

&lt;p&gt;
我一直在想：我已经很难改变自己的性格了。我做体力劳动很慢的，总是被父亲训斥，说干活不麻利。无法处理生活中的小事情——用绳子将板子固定在三轮电动车上，我看过父亲怎么系绳子，不过我不记忆他系的方式，因为我不认为自己应该学习这种东西。在之后的几分钟，我不断思考：不学习这些生活中的小事意味着什么。
&lt;/p&gt;

&lt;p&gt;
小事是父亲的生活经验的具体表现。这让他能够更有效地完成一些事。我不学，之后如果遇到类似的，会费些力气才能够解决。生活经验通过父亲传递给我，我再传递给我的孩子。
&lt;/p&gt;

&lt;p&gt;
学习的 String 方法：charAt()、fromCharCode()、indexOf()、substring()、toString()、valueOf()；
&lt;/p&gt;

&lt;p&gt;
阅读的书/文章：在读《哲学的故事》；
&lt;/p&gt;

&lt;p&gt;
思考了什么：
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;自己对于职业生涯的规划&lt;/li&gt;
&lt;li&gt;谈恋爱、结婚的想法&lt;/li&gt;
&lt;li&gt;如何更好地了解自己&lt;/li&gt;
&lt;li&gt;学习能给我带来什么&lt;/li&gt;
&lt;li&gt;读书之于我，有怎样的地位&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
有什么值得记录的经历、经验、教训：
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;当陌生人赞美你时，说明他/她对你有所求&lt;/li&gt;
&lt;li&gt;人是懒惰的，如何让懒惰的自己高效率地学习工作是我的重要课题&lt;/li&gt;
&lt;li&gt;社交网络让人与人的物理距离缩短，心灵之间的距离却愈加疏远&lt;/li&gt;
&lt;li&gt;人与人之间，存在部分理解，不存在完全理解彼此的一对人&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
在剩下的这个月的这些天（1.20-1.31），计划做哪些事情：
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;练习使用 String 的所有方法，试一试做个小游戏&lt;/li&gt;
&lt;li&gt;《哲学的故事》读完：第二章（亚里士多德和希腊科学）、第三章（弗朗西斯·培根），思考这些哲学家为何能够有如此成就&lt;/li&gt;
&lt;li&gt;看电影《低俗小说》，并写影评 1000 字&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description></item>
<item><title>如何在 Sphinx 下使用 JSDoc</title><link>https://www.yidajiabei.xyz/blog/2022/sphinx-jsdoc.html</link><guid isPermaLink="true">https://www.yidajiabei.xyz/blog/2022/sphinx-jsdoc.html</guid><pubDate>Fri, 14 Jan 2022 08:00:00 CST</pubDate><description type="html">&lt;div id="content"&gt;
&lt;header&gt;
&lt;h1 class="title"&gt;如何在 Sphinx 下使用 JSDoc&lt;/h1&gt;
&lt;/header&gt;&lt;nav id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#orge864e84"&gt;1. 使用&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgcd03641"&gt;2. 文件结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org960aded"&gt;3. GitHub Action 自动部署&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/nav&gt;
&lt;p&gt;
我建了一个仓库，记录自己学习 MDN 网站的过程。我发现了很多函数，它们有参数和返回值，我想着能不能把学习使用过的函数做成一个文档列表，于是我找到了 JSDoc&lt;sup&gt;&lt;a id="fnr.1" class="footref" href="#fn.1"&gt;1&lt;/a&gt;&lt;/sup&gt;。它能根据 js 源文件生成文档。
&lt;/p&gt;

&lt;p&gt;
Sphinx 是 Python 编程语言下的常见文档构建程序。我想把 JSDoc 和它结合起来，于是我找到了 sphinx-js&lt;sup&gt;&lt;a id="fnr.2" class="footref" href="#fn.2"&gt;2&lt;/a&gt;&lt;/sup&gt;。
&lt;/p&gt;

&lt;div id="outline-container-orge864e84" class="outline-2"&gt;
&lt;h2 id="orge864e84"&gt;&lt;span class="section-number-2"&gt;1&lt;/span&gt; 使用&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
确保 Python 版本为 3.8，使用 3.10 会报错：
&lt;/p&gt;

&lt;div class="org-src-container"&gt;
&lt;pre class="src src-sh"&gt;Could not import extension sphinx_js (exception: cannot import name &lt;span style="color: #ddbc91;"&gt;'Mapping'&lt;/span&gt; from &lt;span style="color: #ddbc91;"&gt;'collections'&lt;/span&gt; (/usr/lib/python3.10/collections/__init__.py))
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
可以将待安装的 pypi 包保存为 requirements.txt：
&lt;/p&gt;

&lt;div class="org-src-container"&gt;
&lt;pre class="src src-txt"&gt;sphinx
sphinx-autobuild
sphinx-js&gt;=3.1
## 以上必选，以下分别是主题，md 文档支持，可不安装
furo
myst-parser
&lt;/pre&gt;
&lt;/div&gt;

&lt;div class="org-src-container"&gt;
&lt;pre class="src src-sh"&gt;&lt;span style="color: #706565;"&gt;# &lt;/span&gt;&lt;span style="color: #857575;"&gt;&#21019;&#24314;&#34394;&#25311;&#29615;&#22659;&#24182;&#26356;&#26032;&#20381;&#36182;&#21040;&#26368;&#26032;&#29256;&#26412;&lt;/span&gt;
python -m venv venv --upgrade-deps
&lt;span style="color: #706565;"&gt;# &lt;/span&gt;&lt;span style="color: #857575;"&gt;&#28608;&#27963;&#34394;&#25311;&#29615;&#22659;&lt;/span&gt;
. venv/bin/activate
&lt;span style="color: #706565;"&gt;# &lt;/span&gt;&lt;span style="color: #857575;"&gt;&#23433;&#35013; pypi &#21253;&lt;/span&gt;
pip install -r requirements.txt
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
Sphinx 文档配置文件 conf.py：
&lt;/p&gt;

&lt;div class="org-src-container"&gt;
&lt;pre class="src src-python"&gt;&lt;span style="color: #aaca86;"&gt;extensions&lt;/span&gt; = [
  &lt;span style="color: #ddbc91;"&gt;"sphinx_js"&lt;/span&gt;
]
&lt;span style="color: #706565;"&gt;# &lt;/span&gt;&lt;span style="color: #857575;"&gt;Used to extract JSDoc function/class docs from source&lt;/span&gt;
&lt;span style="color: #aaca86;"&gt;js_language&lt;/span&gt; = &lt;span style="color: #ddbc91;"&gt;'javascript'&lt;/span&gt;
&lt;span style="color: #aaca86;"&gt;js_source_path&lt;/span&gt; = &lt;span style="color: #ddbc91;"&gt;'../src/'&lt;/span&gt;
&lt;span style="color: #706565;"&gt;# &lt;/span&gt;&lt;span style="color: #857575;"&gt;jsdoc_config_path = '../tsconfig.json'&lt;/span&gt;
&lt;span style="color: #aaca86;"&gt;primary_domain&lt;/span&gt; = &lt;span style="color: #ddbc91;"&gt;'js'&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
文档配置 api.rst：
&lt;/p&gt;

&lt;div class="org-src-container"&gt;
&lt;pre class="src src-rst"&gt;&lt;span style="background-color: #262626;"&gt;API&lt;/span&gt;
&lt;span style="color: #91a0b3;"&gt;====&lt;/span&gt;

&lt;span style="color: #9fbfdf;"&gt;.. autofunction::&lt;/span&gt; parseInt
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
js 源文件 index.js：
&lt;/p&gt;

&lt;div class="org-src-container"&gt;
&lt;pre class="src src-js"&gt;&lt;span style="color: #7c7565;"&gt;/** @function parseInt&lt;/span&gt;
&lt;span style="color: #7c7565;"&gt; * @param {string} string - value to parse&lt;/span&gt;
&lt;span style="color: #7c7565;"&gt; * @param {number} [radix] - integer between 2 and 36. Not default to 10 !!!&lt;/span&gt;
&lt;span style="color: #7c7565;"&gt; * @return {(number|NaN)} integer | NaN (radix &lt; 2 or radix &gt; 36 or first non-whitespace character cannot be converted to a number)&lt;/span&gt;
&lt;span style="color: #7c7565;"&gt; *&lt;/span&gt;
&lt;span style="color: #7c7565;"&gt; * @example&lt;/span&gt;
&lt;span style="color: #7c7565;"&gt; * parseInt('0xe', 16)&lt;/span&gt;
&lt;span style="color: #7c7565;"&gt; */&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
本地预览：
&lt;/p&gt;

&lt;div class="org-src-container"&gt;
&lt;pre class="src src-sh"&gt;sphinx-autobuild content build
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgcd03641" class="outline-2"&gt;
&lt;h2 id="orgcd03641"&gt;&lt;span class="section-number-2"&gt;2&lt;/span&gt; 文件结构&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;div class="org-src-container"&gt;
&lt;pre class="src src-txt"&gt;.
├── build
├── content
│  ├── _static
│  ├── api.rst
│  ├── conf.py
│  └── index.md
├── Makefile
├── requirements.txt
├── src
│  └── index.js
└── venv
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org960aded" class="outline-2"&gt;
&lt;h2 id="org960aded"&gt;&lt;span class="section-number-2"&gt;3&lt;/span&gt; GitHub Action 自动部署&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;div class="org-src-container"&gt;
&lt;pre class="src src-yml"&gt;name: "Build Sphinx"

on:
  push:
    branches: [main]

jobs:
  docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          npm install -g jsdoc
    - name: Clone deploy branch
      run: |
        REMOTE_BRANCH="${REMOTE_BRANCH:-gh-pages}"
        REMOTE_REPO="https://${GITHUB_ACTOR}:${{ secrets.GITHUB_TOKEN }}@github.com/${GITHUB_REPOSITORY}.git"

        rm -rf build/html/
        mkdir -p build/html/
        git clone --depth=1 --branch="${REMOTE_BRANCH}" --single-branch --no-checkout \
          "${REMOTE_REPO}" build/html/
    - run: make html
    - name: Deploy to GitHub Pages
      if: "github.event_name == 'push'"
      run: |
        SOURCE_COMMIT="$(git log -1 --pretty="%an: %B" "$GITHUB_SHA")"
        pushd build/html/ &amp;&gt;/dev/null
        if [ "$(git status --porcelain | wc -l)" -eq 0 ]; then
          exit 0
        fi

        git add --all
        git -c user.name="${GITHUB_ACTOR}" -c user.email="${GITHUB_ACTOR}@users.noreply.github.com" \
          commit --quiet \
          --message "Deploy docs from ${GITHUB_SHA}" \
          --message "$SOURCE_COMMIT"
        git push

        popd &amp;&gt;/dev/null
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="footnotes"&gt;
&lt;h2 class="footnotes"&gt;Footnotes: &lt;/h2&gt;
&lt;div id="text-footnotes"&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.1" class="footnum" href="#fnr.1"&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;div class="footpara"&gt;&lt;p class="footpara"&gt;
&lt;a href="https://github.com/jsdoc/jsdoc"&gt;https://github.com/jsdoc/jsdoc&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.2" class="footnum" href="#fnr.2"&gt;2&lt;/a&gt;&lt;/sup&gt; &lt;div class="footpara"&gt;&lt;p class="footpara"&gt;
&lt;a href="https://github.com/mozilla/sphinx-js"&gt;https://github.com/mozilla/sphinx-js&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description></item>
<item><title>常用脚本</title><link>https://www.yidajiabei.xyz/blog/2022/common-scripts.html</link><guid isPermaLink="true">https://www.yidajiabei.xyz/blog/2022/common-scripts.html</guid><pubDate>Fri, 14 Jan 2022 08:00:00 CST</pubDate><description type="html">&lt;div id="content"&gt;
&lt;header&gt;
&lt;h1 class="title"&gt;常用脚本&lt;/h1&gt;
&lt;/header&gt;
&lt;div id="outline-container-org3325ed7" class="outline-2"&gt;
&lt;h2 id="org3325ed7"&gt;批量删除 Pypi 包&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org3325ed7"&gt;
&lt;div class="org-src-container"&gt;
&lt;pre class="src src-sh"&gt;pip freeze | grep SOMETHING | xargs pip uninstall -y
&lt;span style="color: #706565;"&gt;# &lt;/span&gt;&lt;span style="color: #857575;"&gt;https://stackoverflow.com/a/9406259&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgf2fb77c" class="outline-2"&gt;
&lt;h2 id="orgf2fb77c"&gt;批量删除 Pacman 包&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgf2fb77c"&gt;
&lt;div class="org-src-container"&gt;
&lt;pre class="src src-sh"&gt;sudo pacman -Rs $(pacman -Qq | grep some_words)
&lt;span style="color: #706565;"&gt;# &lt;/span&gt;&lt;span style="color: #857575;"&gt;https://bbs.archlinux.org/viewtopic.php?pid=1533162#p1533162&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description></item>
<item><title>GitHub Code Search 搜索语法</title><link>https://www.yidajiabei.xyz/blog/2022/github-code-search.html</link><guid isPermaLink="true">https://www.yidajiabei.xyz/blog/2022/github-code-search.html</guid><pubDate>Tue, 11 Jan 2022 08:00:00 CST</pubDate><description type="html">&lt;div id="content"&gt;
&lt;header&gt;
&lt;h1 class="title"&gt;GitHub Code Search 搜索语法&lt;/h1&gt;
&lt;/header&gt;&lt;nav id="table-of-contents"&gt;
&lt;h2&gt;Table of Contents&lt;/h2&gt;
&lt;div id="text-table-of-contents"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#org157ad3a"&gt;1. 基础查询结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgd395258"&gt;2. 精确查找&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orgcc63ffc"&gt;3. 仓库和组织限定词&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org1584c45"&gt;4. 语言限定&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#orge6e58b1"&gt;5. 路径限定&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org8ee43d1"&gt;6. 扩展名限定&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org90e8ca3"&gt;7. Symbol 限定&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#org2abedb9"&gt;8. Content 限定&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/nav&gt;
&lt;p&gt;
&lt;a href="https://cs.github.com/about/syntax"&gt;https://cs.github.com/about/syntax&lt;/a&gt;
&lt;/p&gt;

&lt;div id="outline-container-org157ad3a" class="outline-2"&gt;
&lt;h2 id="org157ad3a"&gt;&lt;span class="section-number-2"&gt;1&lt;/span&gt; 基础查询结构&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-1"&gt;
&lt;p&gt;
一个关键词会匹配文件内容或文件路径。
&lt;/p&gt;

&lt;p&gt;
多个关键词会匹配文件内容，只要包含关键词，就会出现在搜索结果中，不论前后顺序，是否是一个单词（多个关键词之间没有空格）。
&lt;/p&gt;

&lt;p&gt;
还可以使用特定关键字（限定词）指定查询范围：
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;repo:github/github&lt;/li&gt;
&lt;li&gt;org:github 或者 user:tj&lt;/li&gt;
&lt;li&gt;language:python&lt;/li&gt;
&lt;li&gt;path:README.md&lt;/li&gt;
&lt;li&gt;extension:js&lt;/li&gt;
&lt;li&gt;symbol:scanbytes&lt;/li&gt;
&lt;li&gt;content:querystats&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
还支持逻辑运算符：
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;hello world &lt;=&gt; hello AND world&lt;/li&gt;
&lt;li&gt;hello OR world&lt;/li&gt;
&lt;li&gt;hello NOT world&lt;/li&gt;
&lt;li&gt;"fatal error" NOT path:__testing__&lt;/li&gt;
&lt;li&gt;(language:ruby OR language:python) AND NOT path:"&lt;i&gt;tests&lt;/i&gt;"&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
还支持正则表达式，要用 // 包围：
&lt;/p&gt;

&lt;p&gt;
\/git.*push\/
&lt;/p&gt;

&lt;p&gt;
会查询所有文件中，git 后面有 push 的部分。git 与 push 之间可以有任意字符。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgd395258" class="outline-2"&gt;
&lt;h2 id="orgd395258"&gt;&lt;span class="section-number-2"&gt;2&lt;/span&gt; 精确查找&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-2"&gt;
&lt;p&gt;
目标词组要用 "" 包裹 "abc def"。
&lt;/p&gt;

&lt;p&gt;
如果待搜索的字符串中有引号，可以用反斜杠转义 "name = \"Jim\""。
&lt;/p&gt;

&lt;p&gt;
也支持限定词 path:git language:"protocol buffers"。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgcc63ffc" class="outline-2"&gt;
&lt;h2 id="orgcc63ffc"&gt;&lt;span class="section-number-2"&gt;3&lt;/span&gt; 仓库和组织限定词&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-3"&gt;
&lt;p&gt;
repo:github/linguist
&lt;/p&gt;

&lt;p&gt;
repo:torvalds/linux OR repo:git/git
&lt;/p&gt;

&lt;p&gt;
org:github &lt;=&gt; user:github
&lt;/p&gt;

&lt;p&gt;
目前（2022-01-11）还不支持对仓库名和组织名、用户名的正则表达式全部或部分匹配，所以搜索时，需要输入目标的全部 user[org]/reponame。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org1584c45" class="outline-2"&gt;
&lt;h2 id="org1584c45"&gt;&lt;span class="section-number-2"&gt;4&lt;/span&gt; 语言限定&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-4"&gt;
&lt;p&gt;
language:ruby OR language:cpp OR language:csharp
&lt;/p&gt;

&lt;p&gt;
所有语言都在&lt;a href="https://github.com/github/linguist/blob/master/lib/linguist/languages.yml"&gt;这里&lt;/a&gt;。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orge6e58b1" class="outline-2"&gt;
&lt;h2 id="orge6e58b1"&gt;&lt;span class="section-number-2"&gt;5&lt;/span&gt; 路径限定&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-5"&gt;
&lt;p&gt;
path:unit_tests
&lt;/p&gt;

&lt;p&gt;
它会查找所有路径中包含目标的部分。
&lt;/p&gt;

&lt;p&gt;
如果只想得到根路径下的内容，用正则表达式：
&lt;/p&gt;

&lt;div class="org-src-container"&gt;
&lt;pre class="src src-text"&gt;path:/(^|\\/)/README\.md$/
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org8ee43d1" class="outline-2"&gt;
&lt;h2 id="org8ee43d1"&gt;&lt;span class="section-number-2"&gt;6&lt;/span&gt; 扩展名限定&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-6"&gt;
&lt;p&gt;
extension:.js &lt;=&gt; extension:js
&lt;/p&gt;

&lt;p&gt;
extension:/[jt]s/
&lt;/p&gt;

&lt;p&gt;
查找扩展名为 js 或 ts 的文件。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org90e8ca3" class="outline-2"&gt;
&lt;h2 id="org90e8ca3"&gt;&lt;span class="section-number-2"&gt;7&lt;/span&gt; Symbol 限定&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-7"&gt;
&lt;p&gt;
language:go symbol:WithContext
&lt;/p&gt;

&lt;p&gt;
目前（2022-01-11）只能查找关于 Symbol 的定义，还没有支持所有 Symbol 或语言。关于语言支持 Symbol 搜索的情况可以看 &lt;a href="https://cs.github.com/about/faq#languages"&gt;FAQ&lt;/a&gt;。
&lt;/p&gt;

&lt;p&gt;
同样可以用正则表达式搜索：
&lt;/p&gt;

&lt;p&gt;
language:rust symbol:/^String::to_.*/
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org2abedb9" class="outline-2"&gt;
&lt;h2 id="org2abedb9"&gt;&lt;span class="section-number-2"&gt;8&lt;/span&gt; Content 限定&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-8"&gt;
&lt;p&gt;
如果只想搜索内容，不包括文件路径，可以这样
&lt;/p&gt;

&lt;p&gt;
content:README.md
&lt;/p&gt;

&lt;p&gt;
它只匹配文件内容中，含有 README.md 的部分。&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description></item>
<item><title>技术遐想（一）</title><link>https://www.yidajiabei.xyz/blog/2022/tech-thought-1.html</link><guid isPermaLink="true">https://www.yidajiabei.xyz/blog/2022/tech-thought-1.html</guid><pubDate>Mon, 10 Jan 2022 08:00:00 CST</pubDate><description type="html">&lt;div id="content"&gt;
&lt;header&gt;
&lt;h1 class="title"&gt;技术遐想（一）&lt;/h1&gt;
&lt;/header&gt;&lt;p&gt;
从昨天开始，就决定手写一个 Cheatsheet 网站，仿照 &lt;a href="https://overapi.com/"&gt;OverAPI&lt;/a&gt;。起因是想找到一个页面，能够看到 JS 相关所有理论知识，一搜索就找到了它，很喜欢这种样式。于是仿写的想法就产生了。
&lt;/p&gt;

&lt;p&gt;
有三点需要记录下来：
&lt;/p&gt;

&lt;p&gt;
一、怎样形成适合自己的解决问题的方法论？
&lt;/p&gt;

&lt;p&gt;
最重要的一点：知道自己想要什么。比如说，我想知道怎样用 CSS 画一个正方形，我就会搜索“CSS square”，搜索结果就是答案。再比如，我想知道 JavaScript 的基础概念都有哪些，我试过直接搜索“JS basic concepts”，结果的确有哪些基础念，但这可能并非我真正需要的。
&lt;/p&gt;

&lt;p&gt;
我在解决问题的时候，并没有对问题的本质进行思考。就用上一段的两个例子来说，前者很明确，就是想用 CSS 画个正方形；后者却不那么具体，“基础概念”一词，每个人的理解都不一样，所以我找到的答案都是 &lt;b&gt;别人认为的基础概念&lt;/b&gt; 。刚开始学习一门语言的时候，我不知道哪些是基础概念，哪些只是需要了解，这个时候了解已经掌握这门语言的人，他们是怎样学习的，就很重要。之后再思考：掌握一门语言的关键在哪里（数据类型，函数）。
&lt;/p&gt;

&lt;p&gt;
遇到问题，怎样进行分析？
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;你要知道，这个问题是否真的是个问题。因为有时，我们会误以为这是个很困难的问题，直到解决了那一刻才意识到，原来这么容易就能解决。为什么我们没有在最开始就想到这一点？可能的原因就是，没有对问题的本质进行探讨。还是上文想知道 JS 基本概念的例子，其实我并不只是想知道 JS 的基本概念，我还想了解语言的整体，我要知道它有哪些部分构成，分别都起什么作用。这就是在 What 层面上的思考，即它是否是一个问题。&lt;/li&gt;
&lt;li&gt;How 层面。这个问题是怎样产生的？代码层面，能不能做一个最小 demo 把问题复现。&lt;/li&gt;
&lt;li&gt;Why 层面。问题出现了，为什么会在这里出现这样的问题，是否了解了足够多的背景信息？官方文档是否逐字句阅读过？&lt;/li&gt;
&lt;li&gt;还有其他需要思考之处：在解决问题的过程中，你能查阅哪些资料，我知道的有 MDN，GitHub，搜索引擎；你有没有找到更好的解决办法；为了不让自己重复解决相同或类似的问题，写成博客或是记笔记就是一个好办法；通过这次问题，学习到了哪些东西。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
致谢：
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;&lt;a href="https://github.com/lencx/z/discussions/79"&gt;解决问题方法论&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://program-think.blogspot.com/2009/02/study-technology-in-three-steps.html"&gt;学习技术的三部曲：WHAT、HOW、WHY&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
二、给定一个颜色数组，如何让它和网页中的目标元素一一对应
&lt;/p&gt;

&lt;div class="org-src-container"&gt;
&lt;pre class="src src-js"&gt;&lt;span style="color: #91a0b3;"&gt;const&lt;/span&gt; &lt;span style="color: #aaca86;"&gt;rgbas&lt;/span&gt; = [
  &lt;span style="color: #ddbc91;"&gt;"rgba(251,34,240,0.25)"&lt;/span&gt;,
  &lt;span style="color: #ddbc91;"&gt;"rgba(214,17,21,0.25)"&lt;/span&gt;,
  &lt;span style="color: #ddbc91;"&gt;"rgba(14,251,252,0.25)"&lt;/span&gt;,
  &lt;span style="color: #ddbc91;"&gt;"rgba(158,134,255,0.25)"&lt;/span&gt;,
  &lt;span style="color: #ddbc91;"&gt;"rgba(60,255,20,0.25)"&lt;/span&gt;,
  &lt;span style="color: #ddbc91;"&gt;"rgba(44,158,52,0.25)"&lt;/span&gt;,
  &lt;span style="color: #ddbc91;"&gt;"rgba(225,211,20,0.25)"&lt;/span&gt;,
  &lt;span style="color: #ddbc91;"&gt;"rgba(100,117,121,0.25)"&lt;/span&gt;,
];
&lt;span style="color: #91a0b3;"&gt;const&lt;/span&gt; &lt;span style="color: #aaca86;"&gt;boards&lt;/span&gt; = document.getElementsByClassName(&lt;span style="color: #ddbc91;"&gt;"board"&lt;/span&gt;);

rgbas.forEach(() =&gt; {
  &lt;span style="color: #91a0b3;"&gt;for&lt;/span&gt; (&lt;span style="color: #91a0b3;"&gt;let&lt;/span&gt; &lt;span style="color: #aaca86;"&gt;i&lt;/span&gt; = 0; i &lt; boards.length; i++) {
    boards[i].style.backgroundColor = rgbas[i];
  }
})
&lt;/pre&gt;
&lt;/div&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;定义了颜色数组 rgbas[8]&lt;/li&gt;
&lt;li&gt;将第一个颜色分配给第一个 board 元素；第二个颜色分配给第二个 board 元素；以此类推&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;
下面赋值的部分还有另一种写法：
&lt;/p&gt;

&lt;div class="org-src-container"&gt;
&lt;pre class="src src-js"&gt;&lt;span style="color: #91a0b3;"&gt;for&lt;/span&gt; (&lt;span style="color: #91a0b3;"&gt;let&lt;/span&gt; &lt;span style="color: #aaca86;"&gt;i&lt;/span&gt; = 0; i &lt; rgbas.length; i++) {
  &lt;span style="color: #91a0b3;"&gt;for&lt;/span&gt; (&lt;span style="color: #91a0b3;"&gt;let&lt;/span&gt; &lt;span style="color: #aaca86;"&gt;j&lt;/span&gt; = 0; j &lt; boards.length; j++) {
    ...
  }
}
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
最开始想出的代码是这个样子：
&lt;/p&gt;

&lt;div class="org-src-container"&gt;
&lt;pre class="src src-js"&gt;&lt;span style="color: #91a0b3;"&gt;for&lt;/span&gt; (&lt;span style="color: #91a0b3;"&gt;let&lt;/span&gt; &lt;span style="color: #aaca86;"&gt;j&lt;/span&gt; = 0; j &lt; rgbas.length; j++) {
  &lt;span style="color: #91a0b3;"&gt;for&lt;/span&gt; (&lt;span style="color: #91a0b3;"&gt;let&lt;/span&gt; &lt;span style="color: #aaca86;"&gt;i&lt;/span&gt; = 0; i &lt; boards.length; i++) {
    boards[i].style.backgroundColor = rgbas[j];
  }
}
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
想实现上述效果，但却发现：每一个 board 都有相同的背景色，思考一会儿才发现，如果这样写就会把颜色数组 rgbas 的最后一个颜色元素赋值给每一个 board。
&lt;/p&gt;

&lt;p&gt;
致谢：&lt;a href="https://50projects50days.com/js/main.js"&gt;main.js&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
三、怎样在多个页面应用相同的 HTML
&lt;/p&gt;

&lt;p&gt;
我接触到一个概念——Web Components。在制作网站时，在很多页面都会共用同一个 header 和 footer，Web Components 就是帮助我们复用这些共同代码的。
&lt;/p&gt;

&lt;p&gt;
&lt;code&gt;index.html&lt;/code&gt; ：
&lt;/p&gt;

&lt;div class="org-src-container"&gt;
&lt;pre class="src src-html"&gt;&lt;&lt;span style="color: #91a0b3;"&gt;!DOCTYPE&lt;/span&gt; html&gt;
&lt;&lt;span style="color: #a9df90;"&gt;html&lt;/span&gt;&gt;
  &lt;&lt;span style="color: #a9df90;"&gt;head&lt;/span&gt;&gt;
    ...
    &lt;&lt;span style="color: #a9df90;"&gt;script&lt;/span&gt; &lt;span style="color: #aaca86;"&gt;src&lt;/span&gt;=&lt;span style="color: #ddbc91;"&gt;"./components/header.js"&lt;/span&gt; defer&gt;&lt;/&lt;span style="color: #a9df90;"&gt;script&lt;/span&gt;&gt;
  &lt;/&lt;span style="color: #a9df90;"&gt;head&lt;/span&gt;&gt;
  &lt;&lt;span style="color: #a9df90;"&gt;body&lt;/span&gt;&gt;
    &lt;&lt;span style="color: #a9df90;"&gt;header-component&lt;/span&gt;&gt;&lt;/&lt;span style="color: #a9df90;"&gt;header-component&lt;/span&gt;&gt;
  &lt;/&lt;span style="color: #a9df90;"&gt;body&lt;/span&gt;&gt;
&lt;/&lt;span style="color: #a9df90;"&gt;html&lt;/span&gt;&gt;
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
&lt;code&gt;./components/header.js&lt;/code&gt; ：
&lt;/p&gt;

&lt;div class="org-src-container"&gt;
&lt;pre class="src src-js"&gt;&lt;span style="color: #91a0b3;"&gt;const&lt;/span&gt; &lt;span style="color: #aaca86;"&gt;headerTemplate&lt;/span&gt; = document.createElement(&lt;span style="color: #ddbc91;"&gt;"template"&lt;/span&gt;);

headerTemplate.innerHTML = &lt;span style="color: #ddbc91;"&gt;`&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;  &lt;style&gt;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;    header {&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      background: rgba(0, 0, 0, 0.6);&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      color: #999;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      width: 100%;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      z-index: 2;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      display: flex;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;    }&lt;/span&gt;

&lt;span style="color: #ddbc91;"&gt;    header a {&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      text-decoration: none;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      color: #fff;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      outline: none;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;    }&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;    header a:visited {&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      color: #999;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;    }&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;    header a:hover {&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      color: #fff;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;    }&lt;/span&gt;

&lt;span style="color: #ddbc91;"&gt;    header a#logo {&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      color: #fff;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      font-size: 18px;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      font-weight: bold;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      margin: 0;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      padding: 15px;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      text-align: center;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;    }&lt;/span&gt;

&lt;span style="color: #ddbc91;"&gt;    header ul {&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      display: flex;&lt;/span&gt;

&lt;span style="color: #ddbc91;"&gt;    }&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;    ul li {&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      margin-right: 5px;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      padding: 0 5px;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      list-style-type: none;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;    }&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;    ul li a {&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      display: block;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;    }&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;  &lt;/style&gt;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;  &lt;header&gt;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;    &lt;a href="/" id="logo"&gt;Home&lt;/a&gt;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;    &lt;ul&gt;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      &lt;li&gt;&lt;a href="javascript.html"&gt;JavaScript&lt;/a&gt;&lt;/li&gt;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      &lt;li&gt;&lt;a href="css.html"&gt;CSS&lt;/a&gt;&lt;/li&gt;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      &lt;li&gt;&lt;a href="html.html"&gt;HTML&lt;/a&gt;&lt;/li&gt;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;      &lt;li&gt;&lt;a href="developer-tools.html"&gt;Developer Tools&lt;/a&gt;&lt;/li&gt;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;    &lt;/ul&gt;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;  &lt;/header&gt;&lt;/span&gt;
&lt;span style="color: #ddbc91;"&gt;`&lt;/span&gt;;

&lt;span style="color: #91a0b3;"&gt;class&lt;/span&gt; Header &lt;span style="color: #91a0b3;"&gt;extends&lt;/span&gt; HTMLElement {
  constructor() {
    &lt;span style="color: #91a0b3;"&gt;super&lt;/span&gt;();
  }

  connectedCallback() {
    &lt;span style="color: #91a0b3;"&gt;const&lt;/span&gt; &lt;span style="color: #aaca86;"&gt;shadowRoot&lt;/span&gt; = &lt;span style="color: #ab85a3;"&gt;this&lt;/span&gt;.attachShadow({ mode: &lt;span style="color: #ddbc91;"&gt;"closed"&lt;/span&gt; });

    shadowRoot.appendChild(headerTemplate.content);
  }
}

customElements.define(&lt;span style="color: #ddbc91;"&gt;"header-component"&lt;/span&gt;, Header);
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
实现一个 Web Component 的一般步骤：
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;对现有 Class 的功能进行扩展，创建自己的 Class&lt;/li&gt;
&lt;li&gt;使用 CustomElementRegistry.define() 方法注册你的自定义标签&lt;/li&gt;
&lt;li&gt;如果需要，附加 shadow DOM 到自定义元素中&lt;/li&gt;
&lt;li&gt;如果需要，使用 &lt;template&gt; 和 &lt;slot&gt; 定义 HTML 模板。再一次使用常规 DOM 方法克隆模板，并把它附加在你的 shadow DOM 下&lt;/li&gt;
&lt;li&gt;你可以在任何你需要的页面使用你的自定义标签&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
致谢：
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;&lt;a href="https://developer.mozilla.org/en-US/docs/Web/Web_Components"&gt;Web Components - MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.freecodecamp.org/news/reusable-html-components-how-to-reuse-a-header-and-footer-on-a-website/"&gt;Reusable HTML Components – How to Reuse a Header and Footer on a Website&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description></item>
<item><title>录音的合法性</title><link>https://www.yidajiabei.xyz/blog/2022/legality-of-recording.html</link><guid isPermaLink="true">https://www.yidajiabei.xyz/blog/2022/legality-of-recording.html</guid><pubDate>Sat, 08 Jan 2022 08:00:00 CST</pubDate><description type="html">&lt;div id="content"&gt;
&lt;header&gt;
&lt;h1 class="title"&gt;录音的合法性&lt;/h1&gt;
&lt;/header&gt;&lt;p&gt;
在维护自身权益时，可以录音，但哪种录音是法律认可的？
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;与对方当面或电话沟通过程中，偷偷录制双方沟通的过程取得的视听证据。一般认为属于合法所得，有效&lt;/li&gt;
&lt;li&gt;如果在他人居所、工作场所等放置录音设备，或者采取其他非法手段取得的视听证据，一般认为不属于合法取得，无效&lt;/li&gt;
&lt;li&gt;录音时，尽量录到关键因素，比如时间、双方身份、地点，关于重要事实和待确认的事实最好也在录音中予以确认&lt;/li&gt;
&lt;li&gt;一定要保留录音的原始载体，不能擅自剪辑、截取；如果经过剪辑/截取，通常是无效的&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description></item>
<item><title>酒精致癌</title><link>https://www.yidajiabei.xyz/blog/2022/refuse-to-drink.html</link><guid isPermaLink="true">https://www.yidajiabei.xyz/blog/2022/refuse-to-drink.html</guid><pubDate>Sat, 08 Jan 2022 08:00:00 CST</pubDate><description type="html">&lt;div id="content"&gt;
&lt;header&gt;
&lt;h1 class="title"&gt;酒精致癌&lt;/h1&gt;
&lt;/header&gt;&lt;p&gt;
&lt;a href="https://mp.weixin.qq.com/s/ALO5v2bQ-P2ABlXtb-PBHw"&gt;https://mp.weixin.qq.com/s/ALO5v2bQ-P2ABlXtb-PBHw&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
国际癌症研究机构（IARC）、美国临床肿瘤学会（ASCO）等权威机构都明确指出：酒精（饮料）是重要的致癌因素。
&lt;/p&gt;

&lt;p&gt;
世界卫生组织下属的国际癌症研究机构（IARC），早已把酒精（饮料）列为 1 类致癌物。
&lt;/p&gt;

&lt;p&gt;
饮酒和常见的乳腺癌、结直肠癌、肝癌、食管癌、胃癌和胰腺癌等都有直接关系。当然，和酒关系最密切的癌症类型，来自喝酒会直接接触的组织——如口腔癌，喉癌，食管癌等。
&lt;/p&gt;

&lt;p&gt;
此外，女性尤其不应该喝酒，因为酒精给女性带来的风险看起来比男性更大。数据显示，在美国有 16.4% 的女性乳腺癌与饮酒有关。
&lt;/p&gt;

&lt;p&gt;
如果出于防癌或防病的角度，适量饮酒绝对不是好的建议，更有效更简单的方法永远是——不喝酒。
&lt;/p&gt;

&lt;p&gt;
事实上酒本身不会引起基因突变，不会直接致癌，真正危险的是酒精在人体内的代谢产物：乙醛。
&lt;/p&gt;

&lt;p&gt;
酒精（乙醇）进入体内后，由乙醇脱氢酶代谢为乙醛，然后再由乙醛脱氢酶代谢为乙酸排出体外。
&lt;/p&gt;

&lt;p&gt;
乙醇就是酒精，是喝酒「爽」的来源，导致错觉喝醉是因为它，酒驾醉驾查的也是它；乙酸可以理解为「醋」，没啥毒副作用。
&lt;/p&gt;

&lt;p&gt;
但是，中间代谢产物乙醛，是明确的致癌物。正因如此，世界卫生组织才把含酒精的饮料和乙醛同时列为证据最确凿的 I 类致癌物。
&lt;/p&gt;

&lt;p&gt;
为什么说中国人喝酒更容易致癌呢？因为中国人有酒精代谢基因的缺陷。
&lt;/p&gt;

&lt;p&gt;
喝酒上脸这件事儿是中国（东亚人）特色，喝酒后的外国人并不像中国人那么容易脸红。
&lt;/p&gt;

&lt;p&gt;
而喝酒脸红的根本原因，是中国人多携带有突变的乙醛脱氢酶基因，导致人体无法有效降解乙醛。乙醛在体内积累后能导致血管舒张，看起来就是脸红筋涨，形成「喝酒上脸」的现象。
&lt;/p&gt;

&lt;p&gt;
一些对东亚人群的研究发现，乙醛脱氢酶基因缺陷的人喝酒后，患癌概率会大于没有缺陷的人。&lt;/p&gt;
&lt;/div&gt;</description></item>
<item><title>自动发布 Org Mode</title><link>https://www.yidajiabei.xyz/blog/2022/org-mode-publish-with-crontab.html</link><guid isPermaLink="true">https://www.yidajiabei.xyz/blog/2022/org-mode-publish-with-crontab.html</guid><pubDate>Sat, 08 Jan 2022 08:00:00 CST</pubDate><description type="html">&lt;div id="content"&gt;
&lt;header&gt;
&lt;h1 class="title"&gt;自动发布 Org Mode&lt;/h1&gt;
&lt;/header&gt;&lt;p&gt;
使用了 crontab。
&lt;/p&gt;

&lt;div class="org-src-container"&gt;
&lt;pre class="src src-sh"&gt;crontab -e
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
通过默认编辑器打开一个空白文件，输入：
&lt;/p&gt;

&lt;div class="org-src-container"&gt;
&lt;pre class="src src-text"&gt;@hourly ~/org/publish.sh &gt;&gt; /home/$USER/cron.log 2&gt;&amp;1
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
这行文本的作用：
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;每个小时（整点，如 1 点，2 点……）会执行后面紧跟着的 shell 脚本，要确保脚本可执行（ &lt;code&gt;chmod +x ~/org/publish.sh&lt;/code&gt; ）&lt;/li&gt;
&lt;li&gt;日志输出到 &lt;code&gt;/home/$USER/cron.log&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
&lt;code&gt;~/org/publish.sh&lt;/code&gt; 内容：
&lt;/p&gt;

&lt;div class="org-src-container"&gt;
&lt;pre class="src src-shell"&gt;&lt;span style="color: #ddbc91;"&gt;\\&lt;/span&gt;#!/bin/bash &lt;span style="color: #706565;"&gt;# &lt;/span&gt;&lt;span style="color: #857575;"&gt;&#35813;&#34892;&#22312;&#23454;&#38469;&#20351;&#29992;&#26102;&#65292;&#21482;&#26377; #!/bin/bash&lt;/span&gt;
&lt;span style="color: #706565;"&gt;# &lt;/span&gt;&lt;span style="color: #857575;"&gt;&#22914;&#26524;&#19981;&#21152;\\&#65292;&#23548;&#20986;&#30340; html &#25991;&#20214;&#20013;&#26080;&#27861;&#26174;&#31034;#&lt;/span&gt;

&lt;span style="color: #706565;"&gt;# &lt;/span&gt;&lt;span style="color: #857575;"&gt;&#22914;&#26524;&#27809;&#26377;&#19979;&#38754;&#36825;&#19968;&#34892;&#65292;&#23601;&#19981;&#33021;&#36890;&#36807; publickey push &#21040;&#36828;&#31243;&#20179;&#24211;&lt;/span&gt;
&lt;span style="color: #9fbfdf;"&gt;export&lt;/span&gt; &lt;span style="color: #aaca86;"&gt;GIT_SSH_COMMAND&lt;/span&gt;=&lt;span style="color: #ddbc91;"&gt;"ssh -i /home/$USER/.ssh/private_key"&lt;/span&gt;
&lt;span style="color: #9fbfdf;"&gt;cd&lt;/span&gt; ~/repo/blog/
make publish
&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;
如上述代码中注释所说，通过 cronie 自动化程序，似乎没办法读取到当前用户的私匙，这可能是为了安全。
&lt;/p&gt;

&lt;p&gt;
我直接添加环境变量的解决办法会不会导致安全问题呢？
&lt;/p&gt;

&lt;p&gt;
致谢：
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;&lt;a href="https://chai-bapat.medium.com/how-to-automate-github-using-cron-16effc825bcf"&gt;How to automate Github using Cron?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://git-scm.com/docs/git#Documentation/git.txt-codeGITSSHCOMMANDcode"&gt;GIT_SSH_COMMAND - git Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description></item>
<item><title>谨慎对待合同协议</title><link>https://www.yidajiabei.xyz/blog/2022/contract-agreement.html</link><guid isPermaLink="true">https://www.yidajiabei.xyz/blog/2022/contract-agreement.html</guid><pubDate>Sat, 08 Jan 2022 08:00:00 CST</pubDate><description type="html">&lt;div id="content"&gt;
&lt;header&gt;
&lt;h1 class="title"&gt;谨慎对待合同协议&lt;/h1&gt;
&lt;/header&gt;&lt;p&gt;
&lt;a href="https://mp.weixin.qq.com/s/6RvxZRd8alo2KH8eItOMZA"&gt;https://mp.weixin.qq.com/s/6RvxZRd8alo2KH8eItOMZA&lt;/a&gt;
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;仔细阅读合同书，不论是入职、还是租房买房&lt;/li&gt;
&lt;li&gt;合同一式两份，对方一份，自己一份&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description></item>
<item><title>熬夜增加猝死风险</title><link>https://www.yidajiabei.xyz/blog/2022/stay-up-late-lead-to-die.html</link><guid isPermaLink="true">https://www.yidajiabei.xyz/blog/2022/stay-up-late-lead-to-die.html</guid><pubDate>Sat, 08 Jan 2022 08:00:00 CST</pubDate><description type="html">&lt;div id="content"&gt;
&lt;header&gt;
&lt;h1 class="title"&gt;熬夜增加猝死风险&lt;/h1&gt;
&lt;/header&gt;&lt;ol class="org-ol"&gt;
&lt;li&gt;&lt;a href="https://mp.weixin.qq.com/s/WKK69D8F3JBndqSlaH80jA"&gt;https://mp.weixin.qq.com/s/WKK69D8F3JBndqSlaH80jA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://rdcu.be/cEyPq"&gt;https://rdcu.be/cEyPq&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
原因不明的猝死（sudden unexplained death，SUD）。研究者推测，SUD 多数是因为突发心律失常引起的。
&lt;/p&gt;

&lt;p&gt;
白天人类处于频繁活动状态，心脏中的心肌细胞的钠、钾离子浓度是一种状态；到了夜间，进化经验让心脏知道，人体不会进行白天似的频繁活动，也就通过改变离子浓度达到睡眠状态。
&lt;/p&gt;

&lt;p&gt;
但是，现代生活让人们到了晚上也不休息。大脑处于兴奋状态，发送信号让心脏持续供应能量，心脏只能违背固有节律，降低钠钾的调节幅度，这可能会使心脏的昼夜节律失调。
&lt;/p&gt;

&lt;p&gt;
分子生物学博士 John O' Neill 谈到，当心肌细胞的生物钟和来自大脑的刺激不同步时，心血管系统可能无法应对正常生活工作中的压力，从而增加因不良生活习惯导致患病死亡的风险。
&lt;/p&gt;

&lt;p&gt;
包括人类在内，生命体都有一个生物钟，让个体适应昼夜变换。如果这种节律被破坏，身体就可能出现问题。
&lt;/p&gt;

&lt;p&gt;
昼夜节律紊乱（熬夜）可能的影响：
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;胃肠道溃疡、神经系统疾病&lt;/li&gt;
&lt;li&gt;改变人的行为，如使进食节律变化，导致摄入过多热量，引起肥胖、糖尿病、高血压等相关疾病&lt;/li&gt;
&lt;li&gt;熬夜几乎能增加所有类型癌症的发生风险&lt;/li&gt;
&lt;li&gt;睡眠时间提前一个小时，重症抑郁的患病风险就降低了 23%&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</description></item>
<item><title>学习粉墙</title><link>https://www.yidajiabei.xyz/blog/2022/physical-labour.html</link><guid isPermaLink="true">https://www.yidajiabei.xyz/blog/2022/physical-labour.html</guid><pubDate>Wed, 05 Jan 2022 08:00:00 CST</pubDate><description type="html">&lt;div id="content"&gt;
&lt;header&gt;
&lt;h1 class="title"&gt;学习粉墙&lt;/h1&gt;
&lt;/header&gt;&lt;p&gt;
今天是帮助父亲干活儿的第三天，干完活就没有精力继续学习了，因为特别累，无法集中注意力。
&lt;/p&gt;

&lt;p&gt;
干的活属于室内装修，方言称「刮大白」，就是在墙上涂上白色涂料。手拿着板状工具，从已经搅拌好涂料的桶中，撅出一块来，放到墙上，再用工具顺平，要求是平整，没有突出凹陷。
&lt;/p&gt;

&lt;p&gt;
我干这个已经四年了，每年寒假都会帮着父亲干一些。前几年干的时候，还不知道怎么用劲儿，手还不够灵活，刮出来的墙面总是深浅不一。和父亲的刮出来的差距甚远。今天父亲手把手又教我一次，发现自己已经掌握一些技巧了——刚开始学习的时候以快为主，先在面前手臂可及的范围内将涂料抹满，再刮去突出的部分，使得墙面平整。
&lt;/p&gt;

&lt;p&gt;
父亲对我很严厉，我干活很慢，这是长久以来已经养成的习惯。所以，父亲唠叨很多，我又害怕他打我，也就更加小心翼翼。我被父亲打怕了，干活的时候会想象不知道哪一刻，头会被敲一下、屁股会挨上一脚。
&lt;/p&gt;

&lt;p&gt;
我很着急，因为找工作需要的知识还没学习完毕。所以，我不想干活，它对我来说是一份煎熬。但是，我换一种角度看待它。
&lt;/p&gt;

&lt;p&gt;
粉墙不是我所喜欢的，但这是我必须完成的，因为为了生活必须做到，如果不干就没有饭吃。况且，在找工作的时候，就算我真的找到前端工程师工作，工作内容就一定是我所喜欢的吗？如果不是，我是不是就要辞职另找一份呢？
&lt;/p&gt;

&lt;p&gt;
不是的，即便工作内容并不为我喜欢，我也要尽职尽责，把我应该做的，以及可以做的都做到。工作就是创造价值，无论是为了自己还是为了别人。
&lt;/p&gt;

&lt;p&gt;
刮大白和做前端都是反馈及时的事情，前者一眼就能看到，后者根据输出可以看到。这样的好处是可以很快地发现问题并解决。&lt;/p&gt;
&lt;/div&gt;</description></item>
<item><title>和初中同学的一次聊天</title><link>https://www.yidajiabei.xyz/blog/2022/talk-with-junior-high-school-classmate.html</link><guid isPermaLink="true">https://www.yidajiabei.xyz/blog/2022/talk-with-junior-high-school-classmate.html</guid><pubDate>Sun, 02 Jan 2022 08:00:00 CST</pubDate><description type="html">&lt;div id="content"&gt;
&lt;header&gt;
&lt;h1 class="title"&gt;和初中同学的一次聊天&lt;/h1&gt;
&lt;/header&gt;&lt;p&gt;
本来约好是明天下午见面，不过她今天下午有时间，就约在下午四点，在一家名为「陌上花开」的咖啡店。
&lt;/p&gt;

&lt;p&gt;
四年未见，比以前会打扮了，虽然还有些孩子气。可能是因为熟悉的原因，所以更愿意直视，注视着她，听她说话。面部表情很丰富，一个擅长说话的人。白色棉袄，鬓角的头发下垂，袖口还露着在里面的衣服。这是我少有的几次描绘熟人的形象，还需要继续练习。
&lt;/p&gt;

&lt;p&gt;
在和她的聊天中，能感受到自己话语的无力，觉得并不能提供有效的办法；转念一想，或许这就是一种常态，企图通过一次对谈解决问题，那么这问题本就不是问题。一种可能的解决方案就是，持续地与问题死磕，同时在自己认为能够用力的地方，继续用力。我常用一句俗语抚慰自己：「尽人事，听天命」。
&lt;/p&gt;

&lt;p&gt;
写这篇文章的目的有几个：
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;记录。为了以后回望这次谈话，思考这次谈话的意义&lt;/li&gt;
&lt;li&gt;分享。可能会对一些人有启发，公开地分享，让更多人获益&lt;/li&gt;
&lt;li&gt;反刍。在开始写这篇文章的这一刻，我才再一次意识到：自己更习惯于用文字表达。这是我在编程之外的找到的第二个让我自信的地方&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
突然想到一个人的表达：这个世界有很多的概念，有些概念没有调查就没办法真正理解，错误地使用只会增加困惑。
&lt;/p&gt;

&lt;p&gt;
她是一名大专生，三年之前就开始准备专升本，但是昨天目标学校发布了新的公告：取消她的目标专业——英语；考本科需要考高等数学。她很喜欢英语，所以她专科时选择了英语专业，计划当一名初中或者高中英语老师。我通过中小学教师资格考试网发现，如果想考取初中或高中教师资格证，至少要本科学历。但是，她数学不行，专升本考试时可能无法过线。她一直在提醒自己：你没有办法专升本了。这让她陷入某种虚无。
&lt;/p&gt;

&lt;p&gt;
还聊了其他问题，诸如，结婚的意义在哪里……其他的写文章的时候已经忘记了。
&lt;/p&gt;

&lt;p&gt;
社会的有序运转需要各种规则，制定规则的人与应用规则的人注定不在一个角度考虑问题。我最近才从一种理想主义视角中脱离出来。在此之前，在我眼里一切都应该是舒适圆润的，如果不对我胃口，我会努力改变，强迫别人或事物适应我。如果不能改变外界，我就开始把自己封闭起来，不让自己被「污染」。自以为别人都不好，只有自己才是最好的。这种以自我为中心的心态是一直存在的，只不过很少表露给外人看。
&lt;/p&gt;

&lt;p&gt;
公平只在少数需要舆论支持的情况下才会实现，真实生活中这只是一种「理想主义」。阶级是一种都存在的，但是我现在才意识到。我可以做什么呢？
&lt;/p&gt;

&lt;p&gt;
我只是一个普通人，生活在一个社会主义国家。国家的强大，让我能够在和平的年代，认真地活好每一天。我不用微博，我不看抖音。我没有能力在接触它们之后，还能正常学习进步。我在大学这几年尝试了不少新事物：去过一个偏远地方的中学支教，我发现自己喜欢和孩子们相处、写作表达自己一直在做、20 年很幸运能够接触编程，现在想把编程作为职业、读过很多书、看过很多电影、听过很多歌。
&lt;/p&gt;

&lt;p&gt;
从这些经历中，我总结出来一些对生活的理解：时间向前走，人经历得越来越多，思考得越来越多，羁绊也就越来越多。犹豫不安，不敢继续，这些情绪浸润着我的心，但是，当第二天来临的时候，新的一天又开始了，美好的事物在心间荡漾。
&lt;/p&gt;

&lt;p&gt;
最好跟着自己的心走，再不济人生的重大决定跟着自己走。社会公认的人生步骤——升学、结婚、生小孩、为儿子买房，已经深入她的内心。我认为不该如此顺从社会风气。就算最终还是结婚生子，但是这的确是我深思熟虑的结果，而不是所谓的「别人认为你这样做最好」。人这一辈子只有这一次而已，如果不能按照自己的想法活，是很无聊的。当然，按照自己的想法肯定也受外界各种因素局限，这些都要考虑在内。
&lt;/p&gt;

&lt;p&gt;
疫情是一个巨大的黑天鹅，没有人预料得到，当这种意外发生时，一切的计划都显得苍白无力。但是不是说没有计划，计划一定要有，而且不能只有一种计划。有一个计划 A 作为主线，plan B 用于应对意外事件。
&lt;/p&gt;

&lt;p&gt;
好奇心是很重要的，培养自己对特定事物的好奇心。它会在意想不到的时刻给你惊喜。好奇能够引导你关注了解新事物的表面，若想深入需要付出常人不愿的努力。这些努力可能只是精神愉悦，也可能会带来物质回报。
&lt;/p&gt;

&lt;p&gt;
脑袋空空，只有这些了:)
&lt;/p&gt;

&lt;p&gt;
补充：
&lt;/p&gt;

&lt;ul class="org-ul"&gt;
&lt;li&gt;教小学比教初中，可能更能够改变孩子&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</description></item>
<item><title>2021 年终总结</title><link>https://www.yidajiabei.xyz/blog/2022/2021.html</link><guid isPermaLink="true">https://www.yidajiabei.xyz/blog/2022/2021.html</guid><pubDate>Sat, 01 Jan 2022 08:00:00 CST</pubDate><description type="html">&lt;div id="content"&gt;
&lt;header&gt;
&lt;h1 class="title"&gt;2021 年终总结&lt;/h1&gt;
&lt;/header&gt;&lt;ol class="org-ol"&gt;
&lt;li&gt;总结 2021&lt;/li&gt;
&lt;li&gt;展望 2022&lt;/li&gt;
&lt;/ol&gt;

&lt;div id="outline-container-org9ba14c5" class="outline-2"&gt;
&lt;h2 id="org9ba14c5"&gt;2021&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org9ba14c5"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org68e2609" class="outline-3"&gt;
&lt;h3 id="org68e2609"&gt;关于博客&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org68e2609"&gt;
&lt;p&gt;
博客是我记录自己学习和生活的地方。所以，博客的数量某种程度上代表了我学习的广度和对生活的思考。但是，很多博客文章都是写了个开头，草草了事。我很喜欢的一个比喻——蜻蜓点水。这就是我写文章的一个特点。
&lt;/p&gt;

&lt;p&gt;
11 月 20 日那天，开始用 Org Mode&lt;sup&gt;&lt;a id="fnr.1" class="footref" href="#fn.1"&gt;1&lt;/a&gt;&lt;/sup&gt; 作为博客的基础设施。格式转换工作断断续续地进行，明天就能完成。为什么要用 Org Mode 呢？因为好奇。Emacs 是上世纪就流传的文本编辑器，另一款比较流行的编辑器是 Vim，经常会有人询问 Emacs 和 Vim 哪一个更好用，其实无论是否好用，不到使用的时候根本不知道。Emacs 使用了 2 个月，能够进行文本编辑、记住了几个常用快捷键。我在去年就接触了 Emacs，不过最近两个月才开始真正使用。这是为什么？我认为这就是学习新事物的过程，一个黑箱摆在面前，害怕的同时又很好奇；害怕是因为对自己期待太高，进而担心学不会，好奇就是，想知道这个东西到底是干什么用的，能不能为我所用，提高我的效率？
&lt;/p&gt;

&lt;p&gt;
于是，我开始用 Emacs，自然就了解到基于 Emacs 的 Org Mode。Org Mode 和 Markdown 一样，是一种用于标记文本的文本格式，有自己的语法，能够被导出为 HTML、PDF 等常见格式。学习 Org Mode 的收获，就是你正在阅读的这个博客网站。文章结构全部由自己决定，主题来自 org.css&lt;sup&gt;&lt;a id="fnr.2" class="footref" href="#fn.2"&gt;2&lt;/a&gt;&lt;/sup&gt;。
&lt;/p&gt;

&lt;p&gt;
关于博客的内容，我是一直在改变看法的：
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;只记录自己的技术笔记，和生活所思&lt;/li&gt;
&lt;li&gt;加入阅读书籍、观看电影、听音乐的笔记和感想&lt;/li&gt;
&lt;li&gt;加入阅读别人的文章的笔记&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
博客内容的改变主要集中在究竟是只记录 1,2 还是记录 1,2,3。阅读别人的文章有时是一种美妙的享受，这时会想把自己关于文章的一些理解与评论记录下来，这样能够让自己对文章的理解更深刻，也能让更多人读到好的文章。在这种改变之间，鼓舞我的是 @dirtysalt，他的博客&lt;sup&gt;&lt;a id="fnr.3" class="footref" href="#fn.3"&gt;3&lt;/a&gt;&lt;/sup&gt;只有文字，没有样式。他写的内容既有技术又有生活，既有自己对技术的理解，也有阅读别人好的文章或书籍所记的笔记。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgf9e27b9" class="outline-3"&gt;
&lt;h3 id="orgf9e27b9"&gt;关于自我认知&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgf9e27b9"&gt;
&lt;p&gt;
我只挑选一件事来说，通过这件事我想说明自己还不够了解自己。
&lt;/p&gt;

&lt;p&gt;
有一天，从外面回到寝室，在路过别人寝室门口时，看到一个人正在咳嗽，手里拿着烟。我心里想：看吧，这就是抽烟的后果——咳嗽不断，最后可能癌症缠身。我想当然地认为那个人是因为吸烟才咳嗽的，进而觉得这个人真活该。我为什么会有这样的心理？因为我几乎每天都能在走廊里看到有人吸烟，闻到烟味的我认为自己的身体受到了伤害，这种消极情绪长时间积累下来，遇到新的刺激就会爆发。所以，我回到寝室，兴奋地跟室友说，这个人因为抽烟咳嗽，真活该啊。
&lt;/p&gt;

&lt;p&gt;
一个室友回了一句，你这是反社会啊。就像一块正燃烧的木炭，倒上一碗水。心情一下子变得沉闷，也无法继续学习了。我坐在床边，弯腰趴在双腿上，无声地哭了起来，脑子里只有一个词——反社会。这是一个很严重的词，它用在我身上，让我很不安。我那样嘲笑别人，真的不对吗？或许，没有所谓对与错，只是立场不同，观点不同。
&lt;/p&gt;

&lt;p&gt;
张鑫旭在文章《我对知乎前端相关问题的十问十答&lt;sup&gt;&lt;a id="fnr.4" class="footref" href="#fn.4"&gt;4&lt;/a&gt;&lt;/sup&gt;》中，提到：
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
自我认知带来的好处就是更自信，内心更加强大了，比方说一些说话刻薄的人说你是“变态”，你就大可不必放在心上。
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
我为什么会谈到这句话？因为直到今天才明白，我对自己还没有足够的认识，仅凭人家一个「反社会」，就能轻易将我击溃。我曾经的自信似乎是自己的无知营造的假象，我并没有自己想象的那样厉害，我还有很多亟需改变。人在年轻的时候总爱做梦，梦见自己是主角，功成名就；来到现实，却发现自己是无名小卒，微不足道。改变很简单，好好生活。理想不是用来实现的，而是用来追逐的，这是《&lt;a href="../2021/o-alquimista.html"&gt;牧羊少年奇幻之旅&lt;/a&gt;》告诉我的道理。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgda8408c" class="outline-3"&gt;
&lt;h3 id="orgda8408c"&gt;关于工作&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgda8408c"&gt;
&lt;p&gt;
「别人都找到工作了，我还没有找到。」、「你已经大四了。再找不到工作怎么办？」
&lt;/p&gt;

&lt;p&gt;
这些是我未曾说出，却潜藏在心里的话。会有很多类人给我压力，我努力把这些压力排解掉，一步一步地朝着既定目标——找到一份前端工程师工作，前进着。学习一遍的内容，会很快忘记，需要再学习一遍；这是一个循环：学习-&gt;遗忘-&gt;学习-&gt;遗忘-&gt;学习……直到某一天，再也不会遗忘了。就算任何人都在否定自己，不断地说你不行，你也别放弃，因为他们并不了解你，不知道你内心的渴望。
&lt;/p&gt;

&lt;p&gt;
我进行过&lt;a href="../2021/first-interview.html"&gt;一次面试&lt;/a&gt;，通过这次面试我明白自己还无法胜任公司的工作。通过上文提及的张鑫旭的文章&lt;sup&gt;&lt;a id="fnr.4.100" class="footref" href="#fn.4"&gt;4&lt;/a&gt;&lt;/sup&gt;，我明白自己应该花时间学习 JavaScript 基础。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org8edda1c" class="outline-3"&gt;
&lt;h3 id="org8edda1c"&gt;关于书影音&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org8edda1c"&gt;
&lt;p&gt;
读书的话
&lt;/p&gt;

&lt;p&gt;
今年读了毛姆的主要作品：《月亮与六便士》现在已经忘记、《刀锋》则对主人公去印度感受自然的描写，神往异常、《人性的枷锁》讲述了主人公菲利普与两个女人的纠葛。还有上个星期刚读的一本畅销书《克拉拉与太阳》，讨论了未来世界人与人之间的关系是如何影响我们的行为的。
&lt;/p&gt;

&lt;p&gt;
观影的话
&lt;/p&gt;

&lt;p&gt;
看了《你好，李焕英》、《鸟人》、《遗愿清单》、《007》系列、《爱乐之城》、《比海更深（海よりもまだ深く）》、《吉祥如意》、《地球上的星星》
&lt;/p&gt;

&lt;p&gt;
听音
&lt;/p&gt;

&lt;p&gt;
回顾了许嵩的歌，《雅俗共赏》、新专辑《乌鸦》；遇到新歌手王菀之，她的《画意》听得最多。最爱《Life Is Wonderful (Live in Amsterdam)》，Jason Mraz 演唱。
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orga2cfb70" class="outline-2"&gt;
&lt;h2 id="orga2cfb70"&gt;2022&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orga2cfb70"&gt;
&lt;p&gt;
接下来的一年，期待自己的成长：
&lt;/p&gt;

&lt;ol class="org-ol"&gt;
&lt;li&gt;找到属于自己的笃定、自信&lt;/li&gt;
&lt;li&gt;找到一份前端工程师工作，并努力为公司创造价值、让自己获得历练&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="footnotes"&gt;
&lt;h2 class="footnotes"&gt;Footnotes: &lt;/h2&gt;
&lt;div id="text-footnotes"&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.1" class="footnum" href="#fnr.1"&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;div class="footpara"&gt;&lt;p class="footpara"&gt;
&lt;a href="https://orgmode.org/"&gt;https://orgmode.org/&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.2" class="footnum" href="#fnr.2"&gt;2&lt;/a&gt;&lt;/sup&gt; &lt;div class="footpara"&gt;&lt;p class="footpara"&gt;
&lt;a href="https://github.com/gongzhitaao/orgcss"&gt;https://github.com/gongzhitaao/orgcss&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.3" class="footnum" href="#fnr.3"&gt;3&lt;/a&gt;&lt;/sup&gt; &lt;div class="footpara"&gt;&lt;p class="footpara"&gt;
&lt;a href="https://dirtysalt.github.io/html/blogs.html"&gt;https://dirtysalt.github.io/html/blogs.html&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.4" class="footnum" href="#fnr.4"&gt;4&lt;/a&gt;&lt;/sup&gt; &lt;div class="footpara"&gt;&lt;p class="footpara"&gt;
&lt;a href="https://www.zhangxinxu.com/wordpress/2017/06/ten-question-about-frontend-zhihu/"&gt;https://www.zhangxinxu.com/wordpress/2017/06/ten-question-about-frontend-zhihu/&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description></item>
<item><title>俞军 2020 年知乎回答问题</title><link>https://www.yidajiabei.xyz/blog/2021/yujun-answer-questions.html</link><guid isPermaLink="true">https://www.yidajiabei.xyz/blog/2021/yujun-answer-questions.html</guid><pubDate>Tue, 28 Dec 2021 08:00:00 CST</pubDate><description type="html">&lt;div id="content"&gt;
&lt;header&gt;
&lt;h1 class="title"&gt;俞军 2020 年知乎回答&lt;/h1&gt;
&lt;/header&gt;&lt;p&gt;
&lt;a href="https://mp.weixin.qq.com/s/tD13z9FLzVyMxvAvrEEPeA"&gt;https://mp.weixin.qq.com/s/tD13z9FLzVyMxvAvrEEPeA&lt;/a&gt;
&lt;/p&gt;

&lt;div id="outline-container-org271bf31" class="outline-2"&gt;
&lt;h2 id="org271bf31"&gt;产品和创新&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org271bf31"&gt;
&lt;/div&gt;
&lt;div id="outline-container-orgde0dccb" class="outline-3"&gt;
&lt;h3 id="orgde0dccb"&gt;产品经理必须有创新能力吗&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgde0dccb"&gt;
&lt;p&gt;
优秀（高薪）的产品经理必须能创新。
&lt;/p&gt;

&lt;p&gt;
但创造力并不取决于产品经理的个人意愿。
&lt;/p&gt;

&lt;p&gt;
一般来说，一个人的创造力取决于这六个因素的综合影响：智商，知识，思维方式，人格，动机，环境。
&lt;/p&gt;

&lt;p&gt;
智商：低于门槛就影响很大，但高于门槛后没有相关性。智商中等偏上、有正常读完大学的能力，然后，智商对创造力高低的影响就没有明显差别。
&lt;/p&gt;

&lt;p&gt;
知识：创造力需要知识作为基础。只有在目标领域积累客观数量和质量的知识，才可能培养出真正的创造力。 &lt;b&gt;但是，掌握该领域的过多知识，有时反而会导致一个人观念封闭，不能用新视角去看待问题。&lt;/b&gt;
&lt;/p&gt;

&lt;p&gt;
另外，脱离具体问题，提前去学习记忆大量知识，对创造力影响很小。而且，就这个世界的信息和知识数量，你怎么掌握都是一点点，尤其是那些在持续滚动产生的信息和知识。
&lt;/p&gt;

&lt;p&gt;
如何做一个好玩的功能
&lt;/p&gt;

&lt;p&gt;
用户 case 从何而来
&lt;/p&gt;

&lt;p&gt;
如何找到自己的兴趣
&lt;/p&gt;

&lt;p&gt;
如何提高逻辑思维能力
&lt;/p&gt;

&lt;p&gt;
如何增强产品 sense 和同理心
&lt;/p&gt;

&lt;p&gt;
洞察力可以训练吗
&lt;/p&gt;

&lt;p&gt;
深度思考能力如何加强
&lt;/p&gt;

&lt;p&gt;
如何更理解交易
&lt;/p&gt;

&lt;p&gt;
如何有效建立用户模型
&lt;/p&gt;

&lt;p&gt;
对哪款产品印象深刻
&lt;/p&gt;



&lt;p&gt;
新人入门
&lt;/p&gt;

&lt;p&gt;
应届生如何选择岗位
&lt;/p&gt;

&lt;p&gt;
核心竞争力是什么
&lt;/p&gt;

&lt;p&gt;
前几份工作会影响后面的工作领域吗
&lt;/p&gt;

&lt;p&gt;
为什么没有面试邀请
&lt;/p&gt;

&lt;p&gt;
职场会存在韩信这样的天才吗
&lt;/p&gt;



&lt;p&gt;
工作中的困惑
&lt;/p&gt;

&lt;p&gt;
怎么看待阶级固化
&lt;/p&gt;

&lt;p&gt;
如何看待产品经理不重视产品运营的建议
&lt;/p&gt;

&lt;p&gt;
初创团队如何积累首批用户
&lt;/p&gt;

&lt;p&gt;
2B 和 2C 产品经理哪个更受欢迎
&lt;/p&gt;

&lt;p&gt;
新产品的用户 case 从何而来
&lt;/p&gt;

&lt;p&gt;
如何提升长远规划能力
&lt;/p&gt;

&lt;p&gt;
不喜欢行业怎么办
&lt;/p&gt;

&lt;p&gt;
如何看待管理混乱的问题
&lt;/p&gt;

&lt;p&gt;
用户价值能否量化
&lt;/p&gt;



&lt;p&gt;
职业发展
&lt;/p&gt;

&lt;p&gt;
如何看待跨界产品经理
&lt;/p&gt;

&lt;p&gt;
是否认同儒家对人才的划分标准
&lt;/p&gt;

&lt;p&gt;
产品总监的工作范式是什么
&lt;/p&gt;

&lt;p&gt;
如何在被细分的状态里做好规划
&lt;/p&gt;

&lt;p&gt;
3、5 年的坎儿该怎么过
&lt;/p&gt;

&lt;p&gt;
汽车产品经理如何转行
&lt;/p&gt;

&lt;p&gt;
2020 年产品经理的发展趋势是什么
&lt;/p&gt;



&lt;p&gt;
行业认知
&lt;/p&gt;

&lt;p&gt;
传统制造业产品经理如何应对
&lt;/p&gt;

&lt;p&gt;
5G 时代产品经理有什么机会
&lt;/p&gt;

&lt;p&gt;
产品经理未来有没有可能进入大学课堂
&lt;/p&gt;

&lt;p&gt;
如何看待直播行业
&lt;/p&gt;

&lt;p&gt;
如何看待 AI 方向
&lt;/p&gt;

&lt;p&gt;
为何在 2000 年对搜索情有独钟
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</description></item>
<item><title>多一点怀疑，不要轻信</title><link>https://www.yidajiabei.xyz/blog/2021/have-doubt-donot-just-believe.html</link><guid isPermaLink="true">https://www.yidajiabei.xyz/blog/2021/have-doubt-donot-just-believe.html</guid><pubDate>Tue, 28 Dec 2021 08:00:00 CST</pubDate><description type="html">&lt;div id="content"&gt;
&lt;header&gt;
&lt;h1 class="title"&gt;多一点怀疑，不要轻信&lt;/h1&gt;
&lt;/header&gt;&lt;p&gt;
&lt;a href="https://steve.hedwig.pub/i/sheng-cun-ben-neng-mei-fa-bang-ni-huo-chu-zi-ji-steve-shuo-mei-zhou-tong-xun-42"&gt;生存本能没法帮你活出自己|Steve 说每周通讯 #42&lt;/a&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
最近在思考的一个问题是，18-25 岁的年轻人，从各个维度来看都处在人生最脆弱的阶段。上一个阶段有家庭和父母的庇护，下一个阶段自己在经济、事业、生活和人际关系上都趋于成熟与独立了，而恰恰是这个脱离家庭、学校，但又依然在试图融入社会的阶段，年轻人是一无所有的。
&lt;/p&gt;

&lt;p&gt;
因此在这个阶段，任何人呈现给你的东西在你眼里都可能是很稀罕的，任何煽动性，引导性的故事听上去都是有说服力的。而这当中最具说服力的叙事有三个，第一是你抓紧结婚吧，第二是你的简历要好看，不要有空档，不要随便跳槽换方向，第三是你要知道自己想要什么，一切问题都会在知道自己想要什么之后解决。
&lt;/p&gt;

&lt;p&gt;
对于没有爱人，没有职场资历和没有人生方向的年轻人来说，这些看上去都像是真理一般的建议。可是当有一天你拥有了这一切之后，又会想要什么呢？亲密？创造性？意义感？精神超越？一个关键问题就是，为了满足前面那些阶段性目标而规划的生活，让你逐渐接近了后来的这些需要，还是加倍远离了？比如，你心里对生命体验的好奇与热情，是一直在燃烧，还是为了承受生活琐碎已经被你提前浇灭了？
&lt;/p&gt;

&lt;p&gt;
人无法预测未来，所以你不知道你的短期目标对你的长期战略究竟是帮忙还是帮倒忙。因此，对于脆弱和一无所有的年轻人来说，我们可以得出一个反直觉建议：活得随机一点，混乱一点，多一点怀疑，不要轻易被任何布道者魅惑，不要轻易将人生选择外包给某个群体或者某种观念。
&lt;/p&gt;

&lt;p&gt;
因为在一无所有的年纪，你并不是你，你还在为了生存而挣扎。所以不要让生存本能来替你决定以后怎么活出自己的选择。
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;
不要轻易把自己的人生选择托付给别人，多一点怀疑，少一些轻易相信。多去尝试，大胆地尝试；畏畏缩缩不要紧，尽力做就好。我不知道未来会怎么样，我知道自己今天会怎么样，知道自己明天将怎样。&lt;/p&gt;
&lt;/div&gt;</description></item>
<item><title>做你真正想做的事情</title><link>https://www.yidajiabei.xyz/blog/2021/do-what-you-really-want.html</link><guid isPermaLink="true">https://www.yidajiabei.xyz/blog/2021/do-what-you-really-want.html</guid><pubDate>Mon, 27 Dec 2021 08:00:00 CST</pubDate><description type="html">&lt;div id="content"&gt;
&lt;header&gt;
&lt;h1 class="title"&gt;做你真正想做的事情&lt;/h1&gt;
&lt;/header&gt;&lt;p&gt;
&lt;a href="https://mp.weixin.qq.com/s/bOIhO05_RmJusBrlWg4Qyg"&gt;https://mp.weixin.qq.com/s/bOIhO05_RmJusBrlWg4Qyg&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;
我是一个怎样的人？可以试探出自己是怎样的人的问题：
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;
你过去的人生里让你最有成就感的一件事是什么？
&lt;/p&gt;

&lt;p&gt;
我：当我把自己想做的一件很小的事情，但我已经渴望很久了，做出来的时候，我非常有成就感。
&lt;/p&gt;

&lt;p&gt;
你过去人生里让你最有挫败感的一件事是什么？
&lt;/p&gt;

&lt;p&gt;
我：无论我怎么表达，父母都无法理解自己。后来我发现，没必要让他们理解我。
&lt;/p&gt;

&lt;p&gt;
你有崇拜的英雄吗，就是可以作为榜样/精神偶像的人？
&lt;/p&gt;

&lt;p&gt;
我：那些真正跟着自己的心走的人，我想像他们一样。
&lt;/p&gt;

&lt;p&gt;
你觉得自己是一个有企图心的人吗？
&lt;/p&gt;

&lt;p&gt;
我：我有上进心，想做成一件事。
&lt;/p&gt;

&lt;p&gt;
你有没有对什么事情充满了极大的热情？
&lt;/p&gt;

&lt;p&gt;
我：有，某个写代码的瞬间。
&lt;/p&gt;

&lt;p&gt;
你十年后希望自己是一个什么样的人？
&lt;/p&gt;

&lt;p&gt;
我：我希望十年后的自己在面对自己的内心时，能更加从容。
&lt;/p&gt;

&lt;p&gt;
你觉得自己有没有一个价值观或者观点，是和大多数人的看法不一样的，即便所有人反对，你也会坚持的？
&lt;/p&gt;

&lt;p&gt;
我：肯定有。因为这就是我，我说出来就是让别人听到，别人的看法对我来说是重要的，但不能因为别人的意见而轻易改变。
&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;</description></item>
<item><title>Emacs 下将 Org 导出为 pdf</title><link>https://www.yidajiabei.xyz/blog/2021/org-mode-export-pdf.html</link><guid isPermaLink="true">https://www.yidajiabei.xyz/blog/2021/org-mode-export-pdf.html</guid><pubDate>Mon, 27 Dec 2021 08:00:00 CST</pubDate><description type="html">&lt;div id="content"&gt;
&lt;header&gt;
&lt;h1 class="title"&gt;Emacs 下将 Org 导出为 pdf&lt;/h1&gt;
&lt;/header&gt;&lt;p&gt;
使用系统：Arch Linux
&lt;/p&gt;

&lt;p&gt;
起初想安装 texlive-core，texlive-latexextra 等包，通过 Tex 导出，后来通过这篇文章&lt;sup&gt;&lt;a id="fnr.1" class="footref" href="#fn.1"&gt;1&lt;/a&gt;&lt;/sup&gt;找到更快速的办法——Pandoc。它是一个强大的文本格式转换软件，在 Emacs 中使用可以安装 pandoc-mode&lt;sup&gt;&lt;a id="fnr.2" class="footref" href="#fn.2"&gt;2&lt;/a&gt;&lt;/sup&gt; 开启。通过快捷键 &lt;code&gt;M-x pandoc-convert-to-pdf&lt;/code&gt; 即可导出。如果却少某些包，直接安装即可。
&lt;/p&gt;
&lt;div id="footnotes"&gt;
&lt;h2 class="footnotes"&gt;Footnotes: &lt;/h2&gt;
&lt;div id="text-footnotes"&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.1" class="footnum" href="#fnr.1"&gt;1&lt;/a&gt;&lt;/sup&gt; &lt;div class="footpara"&gt;&lt;p class="footpara"&gt;
&lt;a href="https://linuxhint.com/documents_emacs_org_mode/"&gt;https://linuxhint.com/documents_emacs_org_mode/&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class="footdef"&gt;&lt;sup&gt;&lt;a id="fn.2" class="footnum" href="#fnr.2"&gt;2&lt;/a&gt;&lt;/sup&gt; &lt;div class="footpara"&gt;&lt;p class="footpara"&gt;
&lt;a href="https://joostkremers.github.io/pandoc-mode/"&gt;https://joostkremers.github.io/pandoc-mode/&lt;/a&gt;
&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;


&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description></item>
</channel>
</rss>