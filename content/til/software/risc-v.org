* RISC-V
:PROPERTIES:
:CUSTOM_ID: risc-v
:END:
https://csdiy.wiki/

二花说，刚起步，生态不完整，没有就业机会

[[https://en.wikipedia.org/wiki/RISC-V][RISC-V]]

[[https://riscv.org/about/][About RISC-V]]

一种无版权争议的指令集，任何人都可以基于此开发操作系统，提供给人们使用，所以现在国家大力发展这方面的东西。

[[https://roadmap.sh/r/risc-v-for-beginners-copy][Roadmaps]]

** RISC-V vs ARM vs x86
:PROPERTIES:
:CUSTOM_ID: risc-v-vs-arm-vs-x86
:END:
Comparing RISC-V, ARM, and x86 microprocessors involves examining their instruction set architectures (ISAs), performance, and use cases. Here's a structured overview:

*** Instruction Set Architectures
:PROPERTIES:
:CUSTOM_ID: instruction-set-architectures
:END:
- *RISC-V*
  - *Type*: Reduced Instruction Set Computing (RISC)
  - *Open-source*: Yes
  - *Key Features*: Modular, allows custom extensions, simplicity
  - *Customization*: High; organizations can freely modify the ISA[[https://www.notion.so/tianheg/1][1]][[https://www.notion.so/tianheg/4][4]].
- *ARM*
  - *Type*: Reduced Instruction Set Computing (RISC)
  - *Open-source*: No, but licensable
  - *Key Features*: Energy efficiency, compact designs
  - *Customization*: Limited by the licensing agreement with ARM[[https://www.notion.so/tianheg/3][3]][[https://www.notion.so/tianheg/4][4]].
- *x86*
  - *Type*: Complex Instruction Set Computing (CISC)
  - *Open-source*: No, proprietary by Intel and AMD
  - *Key Features*: Performance, wide range of instructions, complexity
  - *Customization*: Very limited due to proprietary nature[[https://www.notion.so/tianheg/2][2]][[https://www.notion.so/tianheg/3][3]][[https://www.notion.so/tianheg/5][5]].

*** Performance and Efficiency
:PROPERTIES:
:CUSTOM_ID: performance-and-efficiency
:END:
- *RISC-V*
  - *Performance*: Currently lower compared to ARM and x86, but has potential due to flexibility and evolving ecosystem
  - *Efficiency*: Moderate; benefits from RISC principles but lacks the extensive optimization seen in ARM[[https://www.notion.so/tianheg/16][16]][[https://www.notion.so/tianheg/20][20]].
- *ARM*
  - *Performance*: Very good for mobile and embedded applications; newer designs also compete in the server market
  - *Efficiency*: High; optimized for low power consumption, ideal for battery-powered devices[[https://www.notion.so/tianheg/3][3]][[https://www.notion.so/tianheg/6][6]][[https://www.notion.so/tianheg/13][13]].
- *x86*
  - *Performance*: Highest, traditionally optimized for peak performance
  - *Efficiency*: Lower than ARM; higher power consumption due to complex instruction decoding[[https://www.notion.so/tianheg/6][6]][[https://www.notion.so/tianheg/12][12]][[https://www.notion.so/tianheg/19][19]].

*** Use Cases and Applications
:PROPERTIES:
:CUSTOM_ID: use-cases-and-applications
:END:
- *RISC-V*
  - *Applications*: Research, custom embedded systems, IoT devices
  - *Advantages*: Customizability, cost-effective, innovation-friendly[[https://www.notion.so/tianheg/1][1]][[https://www.notion.so/tianheg/4][4]].
- *ARM*
  - *Applications*: Mobile devices, embedded systems, some servers, IoT
  - *Advantages*: Energy efficiency, widespread adoption, reliable performance[[https://www.notion.so/tianheg/6][6]][[https://www.notion.so/tianheg/13][13]][[https://www.notion.so/tianheg/21][21]].
- *x86*
  - *Applications*: Personal computers, laptops, servers, high-performance computing
  - *Advantages*: High performance, extensive software support, established market presence[[https://www.notion.so/tianheg/2][2]][[https://www.notion.so/tianheg/5][5]][[https://www.notion.so/tianheg/13][13]].

*** Summary
:PROPERTIES:
:CUSTOM_ID: summary
:END:
The choice between RISC-V, ARM, and x86 depends on the specific needs of the application:

- *RISC-V* is ideal for projects needing high customization and cost-effective design.
- *ARM* excels in energy efficiency and is preferred for mobile and embedded systems.
- *x86* is best for applications requiring high performance and extensive software compatibility.

Each ISA offers unique strengths, and the decision should be based on the specific criteria and objectives of the project.

[1] [[https://www.wevolver.com/article/risc-v-vs-arm]] [2] [[https://www.microcontrollertips.com/risc-v-vs-arm-vs-x86-whats-the-difference/]] [3] [[https://emteria.com/blog/arm-vs-x86]] [4] [[https://resources.system-analysis.cadence.com/blog/will-risc-v-replace-arm-in-embedded-systems]] [5] [[https://www.design-reuse-embedded.com/news/202104084/risc-v-vs-arm-vs-x86-ndash-what-39-s-the-difference/]] [6] [[https://www.androidauthority.com/arm-vs-x86-key-differences-explained-568718/]] [7] [[https://blog.paessler.com/risc-v-vs-arm-who-wins]] [8] [[https://medium.com/@aditya-sunjava/exploring-the-differences-arm-vs-risc-v-architecture-0f50cb838190][https://medium.com/[cite/t:@aditya-sunjava/exploring-the-differences-arm-vs-risc-v-architecture-0f50cb838190]]] [9] [[https://forums.anandtech.com/threads/poll-x86-vs-arm-vs-risc-v-what-is-your-favourite-cpu-isa.2617190/]] [10] [[https://www.jocheojeda.com/2024/05/23/understanding-cpu-architectures-arm-vs-x86/]] [11] [[https://www.reddit.com/r/RISCV/comments/11mzbo7/arm_versus_riscv/]] [12] [[https://www.reddit.com/r/RISCV/comments/kd321u/any_reason_for_riscv_or_anything_to_replace_x86/]] [13] [[https://coffeebeans.io/blogs/arm-vs-x86-comparing-architectures-and-their-impact]] [14] [[https://picockpit.com/raspberry-pi/arm-vs-risc-v-vs-x86/]] [15] [[https://www.fierceelectronics.com/analog/risc-v-vs-arm-processors-quick-comparison]] [16] [[https://www.quora.com/How-does-the-RISC-V-architecture-compare-to-Arm-and-x86-in-terms-of-performance-and-energy-efficiency]] [17] [[https://www.candtsolution.com/news_events-detail/what-is-the-difference-between-arm-and-x86/]] [18] [[https://www.dfrobot.com/blog-13483.html]] [19] [[https://www.peila.co.il/blog/arm-vs-x86]] [20] [[https://www.icdrex.com/risc-v-vs-arm-which-open-standard-risc-architecture-is-better-for-your-microchip-project/]] [21] [[https://www.dfrobot.com/blog-13513.html]] [22] [[https://www.reddit.com/r/compsci/comments/ug1bgy/what_can_x86_do_while_arm_cannot/]] [23] [[https://www.redhat.com/en/topics/linux/ARM-vs-x86]] [24] [[https://www.linkedin.com/pulse/risc-v-going-kill-arm-rahul-yadav-yarff]] [25] [[https://www.hpcwire.com/2022/11/18/risc-v-is-far-from-being-an-alternative-to-x86-and-arm-in-hpc/]] [26] [[https://www.esper.io/blog/arm-vs-x86-whats-the-difference]] [27] [[https://www.criticallink.com/2024/03/arm-vs-risc-v/]]
