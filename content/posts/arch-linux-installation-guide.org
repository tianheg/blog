#+TITLE: Arch Linux 安装指南
#+DATE: <2021-08-20 Fri>
#+TAGS[]: 技术 Arch-Linux
#+TOC: true

* 准备安装

** 下载镜像

从[[https://archlinux.org/download/][官网 Download 页面]]提供的镜像站下载。然后[[https://wiki.archlinux.org/title/Installation_guide#Verify_signature][验证镜像]]。

#+BEGIN_SRC sh
gpg --keyserver-options auto-key-retrieve --verify archlinux-version-x86_64.iso.sig
#+END_SRC

** 制作启动盘

可能的 USB ID：usb-SMI_USB_DISK-0:0，不要在后面加上形似 -part1 的内容（[[https://wiki.archlinux.org/title/USB_flash_installation_medium#Using_basic_command_line_utilities][参考]]）。

#+BEGIN_SRC sh
cat path/to/archlinux-version-x86_64.iso > /dev/disk/by-id/usb-My_flash_drive
#+END_SRC

** 更改 BIOS 设置——关闭安全启动

不同主机进入 BIOS 界面的方式各不相同，我的是 HP 笔记本。此外，F9 是更改启动顺序。

按下开机键 -> 持续按 F10 直到出现 BIOS 设置页面

之后进行三项操作：

1. 启动虚拟化（要在主机创建虚拟机，不需要则不必开启）
2. 关闭安全启动
3. 修改 UEFI 模式下的启动顺序：让 USB 启动在前

** 启动烧录的系统，并验证启动方式为 UEFI

把烧录好系统的 U 盘，通过 USB 接口插到主机上，启动后会看到 Arch Linux 的安装界面。选择默认的第一个按下回车。接下来的所有过程都是通过命令行进行操作，而这正是 Arch Linux 富有魅力的地方。

#+BEGIN_SRC sh
cat /sys/firmware/efi/fw_platform_size
#+END_SRC

有输出，说明启动模式为 UEFI。

** 连接网络

有以下三个方法：

1. 有线连接
2. 无线 Wifi
3. 随身 Wifi USB 连接

以上方法，只有 2 需要在命令行通过 iwctl 命令配置，其他两个都是自动配置的（可参考这位的[[https://blog.yoitsu.moe/arch-linux/installing_arch_linux_for_complete_newbies.html#id33][命令]]）。

然后验证是否连接网络：

#+BEGIN_SRC txt
ping archlinux.org -c 3
#+END_SRC

0% packet loss 说明网络正常。

** 更新系统时间

在烧录系统中，一旦网络连接成功，时间会自动同步。所以，需要 =timedatectl= 命令查看时间是否正常。

** 分区

使用的是 fdisk。

#+BEGIN_SRC sh
# 查看硬盘信息
fdisk -l
# 固态硬盘分区，X 会因为插入硬盘类型不同，而变为不同字母，比如 /dev/sda
fdisk /dev/sdX
# 进入 fdisk 操作界面后，需要创建至少两个分区，一个是系统启动的引导分区（分区类型为 EFI System），一个是剩下的存储空间（分区类型为 Linux filesystem）。还可能有一个 swap 分区，用于物理内存不够时使用
#+END_SRC

以下是分区命令：

- m 查看命令帮助
- p 显示目标硬盘分区
- g 新建 GPT 分区表
- 创建 sdX1 分区，n 创建分区、分区序号、类型起始扇区默认，结束扇区 +1G。t 修改分区类型，1 为 EFI System，p 确认为 EFI System
- 创建 sdX2 分区，全部默认，分区类型为 Linux filesystem
- w 写入硬盘

分区结果：

#+BEGIN_SRC txt
Device      Start       End   Sectors  Size Type
/dev/sda1     2048    2099199    2097152     1G EFI System
/dev/sda2  2099200 1953523711 1951424512 930.5G Linux filesystem
#+END_SRC

** 硬盘格式化、新建文件系统

#+BEGIN_SRC sh
mkfs.fat -F32 /dev/sdX1
mkfs.ext4 /dev/sdX2
#+END_SRC

** 挂载分区

#+BEGIN_SRC sh
mount /dev/sdX2 /mnt
mkdir -p /mnt/boot
mount /dev/sdX1 /mnt/boot
#+END_SRC

* 安装

** 选择镜像源

从官网[[https://archlinux.org/mirrorlist/?country=CN&protocol=https&ip_version=4&use_mirror_status=on][地址]]可以看到，为中国用户设置的 Arch Linux 镜像地址。这是按照镜像得分进行排序的。

#+BEGIN_SRC sh
reflector --save /etc/pacman.d/mirrorlist --country CN --protocol https --latest 10 --sort rate
#+END_SRC

使用 reflector 将最近同步的中国镜像按速率排序，保存在配置文件中，使用的是加密的 HTTPS 协议。

** 安装关键包

#+BEGIN_SRC sh
# pacstrap 在安装上述包时会初始化根目录 /mnt，会在 /mnt 目录中创建 Linux 的文件目录
pacstrap -K /mnt base base-devel linux linux-firmware intel-ucode git vim
## bin/  boot/  dev/  etc/  home/  lib/  lib64/  mnt/  opt/  proc/  root/  run/  sbin/  srv/  sys/  tmp/  usr/  var/
#+END_SRC

- -K 的作用：不复制启动盘中的 pacman keyring，初始化空的 pacman keyring
- /mnt 就是新系统的所在
- base, base-devel, linux, linux-firmware 四个包基本是必装的；可能有想替换的，比如 linux-lts 作为 linux 的替代
- intel-ucode/amd-ucode 一些[[https://wiki.archlinux.org/title/Microcode][微码]]更新，根据 CPU 型号选择安装
- git, vim 前者用于编程代码维护，后者是基于命令行的文本编辑器

* 配置系统

** 生成挂载表

#+BEGIN_SRC txt
genfstab -U -p /mnt >> /mnt/etc/fstab
# 把第2块硬盘也挂载
vim /mnt/etc/fstab
## UUID=16519c74-08f6-4101-a9bd-9d23c2148aa5       /mnt/second-disk   ext4   rw,relatime     0 2
cat /mnt/etc/fstab
#+END_SRC

** 进入硬盘，而不在启动 U 盘

#+BEGIN_SRC sh
arch-chroot /mnt
#+END_SRC

** 时间

设置时区，同步时间：

#+BEGIN_SRC sh
ln -sf /usr/share/zoneinfo/Asia/Hong_Kong /etc/localtime
hwclock --systohc --utc
#+END_SRC

** 本地化（配置系统语言+安装字体输入法）

#+BEGIN_SRC sh
# 在 locale.gen 中取消注释：en_US.UTF-8 UTF-8，zh_CN.UTF-8 UTF-8
vim /etc/locale.gen
# 生成配置
locale-gen
# 设置本地语言环境， LANG=en_US.UTF-8
vim /etc/locale.conf
# 字体
pacman -S noto-fonts noto-fonts-emoji noto-fonts-cjk adobe-source-han-sans-cn-fonts adobe-source-han-serif-cn-fonts otf-monaspace-nerd nerd-fonts-fontconfig
fc-cache -fv
# 输入法
pacman -S fcitx5-im fcitx5-chinese-addons fcitx5-pinyin-zhwiki fcitx5-material-color fcitx5-rime rime-ice
#+END_SRC

添加对 gtk，qt 类（指通过 gtk、qt 编程得到的软件）软件的支持：

#+BEGIN_SRC sh
# /etc/profile
export XMODIFIERS="@im=fcitx"
export GTK_IM_MODULE="fcitx"
export QT_IM_MODULE="fcitx"
#+END_SRC

Rime 配置（ =~/.local/share/fcitx5/rime/default.custom.yaml= ）：

#+BEGIN_SRC yaml
patch:
  schema_list:
    - schema: rime_ice
#+END_SRC

** 网络配置

一、主机名

#+BEGIN_SRC txt
echo arch > /etc/hostname
#+END_SRC

二、Hosts

在 /etc/hosts 中添加以下内容：

#+BEGIN_SRC conf
127.0.0.1 localhost
::1 localhost
127.0.0.1 arch.localdomain arch
#+END_SRC

三、使用 NetworkManager 管理网络

#+BEGIN_SRC txt
pacman -S networkmanager
systemctl enable NetworkManager
#+END_SRC

** 用户相关

一、更改 root 密码

#+BEGIN_SRC sh
passwd
#+END_SRC

二、新建用户，设置用户密码

#+BEGIN_SRC sh
useradd -m -g users -G wheel -s /bin/bash archie
passwd archie
#+END_SRC

三、设置用户权限

#+BEGIN_SRC txt
EDITOR=vim visudo
#+END_SRC

取消注释：

#+BEGIN_SRC conf
## Uncomment to allow members of group wheel to execute any command

%wheel ALL=(ALL) ALL

## Same thing without a password

%wheel ALL=(ALL) NOPASSWD: ALL
#+END_SRC

** 安装引导程序

#+BEGIN_SRC sh
pacman -S grub efibootmgr
grub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUB
grub-mkconfig -o /boot/grub/grub.cfg
#+END_SRC

运行 grub-mkconfig 操作时，会出现警告： =Warning: os-prober will not be executed to detect other bootable partitions.= 。如果不是双系统，不用关注这个警告。

* 安装 KDE 桌面环境

** 返回 U 盘

#+BEGIN_SRC sh
exit
#+END_SRC

** 重启系统

#+BEGIN_SRC sh
umount -R /mnt
reboot
#+END_SRC

开机后改动 BIOS，配置「系统启动」后，拔掉 U 盘。普通用户 archie 登录。

** 安装 KDE

#+BEGIN_SRC sh
pacman -S plasma-meta konsole dolphin
systemctl enable sddm
#+END_SRC
