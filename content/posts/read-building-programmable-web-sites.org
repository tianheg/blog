#+TITLE: Building Programmable Web Sites
#+DATE: <2022-10-29 Sat 23:37>
#+TAGS[]: 阅读

[[https://www.cs.rpi.edu/~hendler/ProgrammableWebSwartz2009.html]]

致敬 Dan Connolly，他不仅创造了 Web 还启示我。

* Introduction: A Programmable Web

如果你和我认识的大多数人一样，你正使用 Web，并且痴迷。事实上，就我个人来说，我大部分时间都花在阅读/扫描网页上面——那些网页要么是和朋友同事交流的 Web 邮件客户端，要么是一两篇包含今日新闻的博客，很多短文章，大量 Google 搜索，为了回答简单问题而去 Wikipedia 寻找偏离事实的答案。

一切都是理所应当的美好；确实不可或缺。还有，想到十年前这些还都不存在就让人陷入沉思。电子邮箱有自己的特定应用，博客刚被发明，文章还在论文上，Google 还没有建立。在 Larry Sanger 眼里，Wikipedia 还没有未来。

因此，当我们的软件像我们一样频繁而随意地使用网络时，世界会变成什么样子，这一想法令人震惊——事实上，这几乎是令人震惊的。今天，当然，我们可以看到这样一个世界的微弱的、未来的微光。有一种软件可以帮助查看其他软件的更新。有一种软件，它的部分内容——帮助页面，或者某种类型的目录——是通过网络流传播的。有一种软件可以把你所有作品的副本发送到网上存储。有一种特别设计的软件可以帮助你浏览某种网页。有一种软件只由某种网页组成。有一种软件——所谓的“mashup”——由一个网页组合来自另外两个网页的信息组成。还有一种软件，使用“API”，将其他网站视为软件基础设施的另一部分，它可以调用另一个功能来完成工作。

我们的计算机是如此之小，网络是如此之大，以至于最后这个场景似乎是不可避免的趋势的一部分。为什么你不能在任何可能的时候依赖其他网站，让他们无穷无尽的信息和丰富的能力成为你不可分割的一部分？因此，我怀疑，这样的使用将变得越来越普遍，直到有一天，你的电脑像你现在一样被网络束缚。

有时有人认为，这样的未来是不可能的，制造一个其他计算机可以使用的网络是一些科幻小说家(我认为是相当缺乏想象力的)的幻想。这只会发生在一个机器人、人工智能和机器跟在你后面的世界里，它们一边叫着订单，一边间歇性地试图说服你买一双新鞋，但没有成功。

因此，表达过类似观点的评论家之一科里 · 多克托罗(Cory Doctorow)实际上是一位颇具想象力的科幻小说家，这或许并不令人惊讶。多克托罗的抱怨表达在他的文章“元废话: 把火炬传递给七个元乌托邦的稻草人”中。

Doctorow 认为，任何系统收集准确的“元数据”——使计算机使用网络的梦想成为现实所需的机器可处理的数据——将会遇到七个不可避免的问题: 人们撒谎，人们懒惰，人们愚蠢，人们不了解自己，模式不是中立的，指标影响结果，并且有不止一种方式来描述某些东西。相反，Doctorow 建议，我们不应该试图让人们提供数据，而是应该看看他们在做其他事情时偶然产生的数据(比如谷歌如何看待人们在写网页时的链接) ，并使用这些数据。

多克托罗当然是在攻击一个草人。关于所有事情的诚实、完整、无偏见的数据的乌托邦幻想显然是不可能的。但是到底是谁在努力呢？网络很少是完全诚实、完整和公正的——但它仍然非常有用。没有理由不让计算机以不同的方式使用 web。

然而，我不得不说，这个想法的支持者并没有逃脱这些乌托邦式的认知的罪责。他们中的许多人到处谈论“语义化网页”，在这个网络中，我们的计算机最终将能够“机器理解”。这样的框架(以及其他因素)吸引了来自苦苦挣扎的人工智能世界的难民，他们把它作为促进自己毕生工作的又一个机会。

他们没有采取让网络(和互联网)取得巨大成功的“让我们建立一些有用的东西”的态度，而是带来了数学家的正式思维模式，以及学术界和国防承包商的制度结构。他们成立委员会，组成工作小组，起草本体论草案，仔细列出(在100页的 Word 文档中)宇宙中所有可能的事物，以及它们可能拥有的各种属性。他们把我们的时间花在犹太法典中关于洗衣机是厨房用具还是家庭清洁设备的辩论上。

随之而来的是学术研究、政府拨款、企业研发，以及整个机构和个人都在大喊“白日梦”。他们不再花时间建造东西，而是**让对这些想法感兴趣的人们相信，我们首先需要做的就是编写标准**。(**对于工程师来说，这从一开始就是荒谬的——标准是你在某些东西工作之后才写的东西，而不是之前!**)

因此，全球网络联盟(W3C)的“语义网活动”(Semantic Web Activity)花费了大量时间来编写标准: XML (XML)、资源描述框架(rDF)、网络本体语言(OWL)、从语言方言中获取资源描述的工具(GRDDL)、简单协议和 RDF 查询语言(SPARQL)(由 RDF 数据访问工作组(DAWG)创建)。

上述几个“标准”没有几个得到广泛使用，而那些使用 XML 的人在这个星球上都是祸害，他们攻击辛勤工作的程序员，这些程序员推出了合理的格式(比如 JSON) ，支持过于复杂的、没有现实基础的数据。

这些自封的语义网担保人没有让现有的系统相互交流，也没有写出最佳实践，而是花时间创建了自己的小宇宙，包括语义网数据库和编程语言。但是，数据库和编程语言虽然远非完美，但在很大程度上已经解决了问题。人们已经有了自己喜欢的软件，这些软件已经在各种不同寻常的环境中被测试和黑客攻击过，人们并不特别倾向于学习新的软件，尤其是在没有任何理由的情况下。让人们共享数据已经够困难了，让他们以特定的格式共享数据更困难了，让他们在一个全新的系统中存储和管理数据也是完全不可能的。

然而，这就是语义网 Leader 正在花费他们的时间。似乎是为了让人们使用网络，他们开始编写一个新的操作系统，其核心就是内置的网络。当然，我们也许有一天会走到这一步，但是从一开始就坚持让人们这样做将注定网络从一开始就默默无闻。

所有这些都导致“网络工程师”(本系列的标题非常可爱地称呼他们)退出，回到真正的工作中去，不想把时间浪费在不存在的东西上，而且很可能永远不会存在。它导致许多一直致力于语义网工作的人，徒劳地希望真正建立一个软件可以交流的世界，使他们精疲力竭，无暇顾及，并为他们的注意力找到更有效的途径。

例如，看看肖恩 · B · 帕尔默(Sean B. Palmer)。在他那篇有影响力的文章“抛弃语义网?”他宣称，“从事 RDF、 OWL、 SPARQL、 RIF、分布式信任、 CWM、制表器、都柏林核心、 FOAF、 sIOC 等这些破碎的理念的工作是不谨慎的，甚至可能是不道德的(如果这听起来不太夸张的话)。”他还说，他不仅会“停止从事语义网工作”，而且“我还会积极劝阻任何人不要从事语义网工作，因为这会分散他们的注意力，使他们无法从事”更实际的项目。

在这里公平地指出，我并不完全是一个公正的观察者。首先，肖恩，就像我在书中引用的其他人一样，是我的朋友。我们是通过一起做这些事情认识的，但是从那以后我们一直保持联系并且分享我们正在做的事情的电子邮件，而且对每个人都很友好。我引用和批评的几乎所有其他人也是如此。

此外，我们在一起工作的原因是，我也曾在语义网盐矿中呆过。我的第一个网络应用是合作编写的百科全书，但是我的第二个网络应用则是聚合网络上各网站的新闻头条，这使我陷入了一个恶性循环，最终在RDF核心工作组中度过了许多年，并最终决定完全退出计算机世界。

很明显，事情没有按计划进行。吉姆 · 亨德勒(Jim Hendler)是我的另一个朋友，也是我花了很多时间研究的人工智能移植者之一。他问我是否愿意就这个主题写一些东西，以开启他正在编写的一系列新电子书的序幕。

#+BEGIN_QUOTE
I'll do just about anything for a little cash (just kidding; I just wanted to get published (just kidding; I've been published plenty of times times (just kidding; not that many times (just kidding; I've never been published (just kidding; I have, but I just wanted more practice (just kidding; I practice plenty (just kidding; I never practice (just kidding; I just wanted to publish a book (just kidding; I just wanted to _write_ a book (just kidding; it's easy to write a book (just kidding; it's a death march (just kidding; it's not so bad (just kidding; my girlfriend left me (just kidding; I left her (just kidding, just kidding, just kidding)))))))))))))))

and so here I am again, rehashing all the old ground and finally getting my chance to complain about what a mistake all the Semantic Web folks have made.
#+END_QUOTE

然而，正如我上面的小小思想实验所希望表明的那样，可编程网络绝不是一个白日梦——它是今天的现实，也是明天的平庸。没有软件开发人员会满足于仅仅局限于用户自己电脑上的东西。任何网站开发者都不会满足于将自己的网站仅限于直接使用该网站的用户。

正如万维网的互联力量将所有可用的文档都吸进了它的胃里——鼓励人们将它们数字化，转换成 HTML，给它们一个 URL，然后把它们放到互联网上(见鬼，正如我们所说的谷歌甚至正在对整个图书馆做这样的事情)——可编程的网络将把所有的应用程序都拉进它的掌控之中。联系所带来的好处是如此强大，以至于最终无法抗拒。

当然，它们将给商业模式带来挑战——因为新技术总是我们的——尤其是对那些通过对数据进行监控和收费来赚钱的人来说。但是从长远来看，这种做法是站不住脚的，无论是在法律上还是在实践中(更不用说在道德上)。根据美国法律，事实是不受版权保护的(这要感谢最高法院在“费斯特诉农村电话服务”一案中做出的里程碑式的裁决) ，而数据库只是事实的集合。(一些欧洲国家拥有特殊的数据库权限，但这种扩展在美国遭到了强烈反对。)

但是，即使法律没有阻碍，分享数据的价值是如此之大，以至于大多数数据提供商最终都会改变主意。当然，提供一个人们可以在上面查找信息的网站是非常有价值的，但是与你将这些信息与其他人结合起来所能做的事情相比，它就显得微不足道了。

以我自己的职业生涯为例，看看网站 OpenSecret. org。它收集有关谁向美国政治候选人捐款的信息，并展示有关资助总统候选人和国会议员竞选活动的行业的漂亮图表。

同样，纳税人网站(Taxpayer.net)也提供了大量有关国会专项拨款的信息——国会议员的拨款请求被塞进法案，要求为某个特定的宠物项目拨款几百万美元。(耗资3.98亿美元的《无处可去的桥》(Bridge to Nowhere)就是最著名的例子。)

这两个网站都很不错，经常被美国政治观察家使用，效果很好。但是想象一下，如果你把它们放在一起，会有多好——你可以搜索那些收到大笔专项拨款的主要竞选捐助者。

请注意，这不是今天的 API 可以实现的那种“mashup”。API 只允许您以特定的方式查看数据，通常是宿主站点查看数据的方式。因此，通过 OpenSecret 的 API，你可以获得候选人的顶级贡献者的列表。但这还不足以回答我们感兴趣的这类问题——你需要将每个专项资金与每个捐赠者进行比较，看它们是否匹配。它需要真正的访问数据。

还要注意的是，最终结果最终是为了大家的最大利益。OpenSecret. org 希望人们发现金钱在政治中的问题影响。纳税人网站希望引起人们对这种浪费性支出的关注。公众想知道政治中的金钱是如何导致浪费性支出的，而一个帮助他们这样做的网站将会推进每个组织的目标。但他们只有愿意分享数据才能达到目的。

对我们来说幸运的是，Web 的设计考虑到了这个未来。支撑它的协议并不是简单地为人类提供页面，而是为了方便地容纳蜘蛛、机器人和脚本这些探索其肥沃土壤的动物群。网络的最初开发者，那些发明工具使网络成为如今生活消遣的人们，早已将他们的目光转向使网络对于应用程序来说是安全的，甚至是有吸引力的。

不幸的是，意识到这一事实的人太少了，导致许多人草率地重新创造他们已经完成的工作。(少数知情人士把时间都花在了我上面批评的语义网上，这对他们的工作毫无帮助。)因此，我们将从试图理解网络的架构开始——它做对了什么，有时候，它做错了什么，但最重要的是——它为什么是这样的。我们将学习如何让用户和搜索引擎和平共处，同时支持从照片共享到金融交易的一切。

我们将继续考虑在 Web 之上构建程序意味着什么——如何编写既能为直接用户服务又能为希望在 Web 之上构建程序的开发人员服务的软件。通常，一个 API 被固定在一个现有的应用程序之上，作为一个事后的想法或一个完全独立的部分。但是，正如我们将看到的，**当一个 web 应用程序被正确设计时，API 会自然而然地从中发展出来，并且不需要花费多少精力来维护**。

然后我们将研究它对你的应用程序意味着什么，它不仅仅是人们和软件使用的另一个工具，而是生态学的一部分——可编程网络的一部分。这意味着在保护用户自由的同时，即使没有明确的许可，也要将您的数据暴露在更大的软件生态系统中以供查询、复制和集成。

最后，我们将以一个饱受诟病的短语“语义网”作为结束，并试图理解它的真正含义。

* Building for users: designing URLs
